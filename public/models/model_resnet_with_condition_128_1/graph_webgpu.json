{
  "kernel_source": "\n#include <metal_stdlib>\nusing namespace metal;\n\n#define OPTIMIZE 0\n\nkernel void sgemm_2d6178c49069e0de0b36cbea5fff9b0fe887c9ef8f5e6f0793dd67eb(device float * static_buffer[[buffer(0)]],\n                          device float * dynamic_buffer[[buffer(1)]],\n                          const device int * meta_buffer [[buffer(2)]],\n                          ushort index[[thread_index_in_threadgroup]],\n                          ushort2 group_position[[threadgroup_position_in_grid]])\n{\n#define TRANSPOSE_A 1\n#define TRANSPOSE_B 1\n#define M_DIVIDABLE_BY_64 0\n#define N_DIVIDABLE_BY_64 1\n#define K_DIVIDABLE_BY_8 0\n\n#if TRANSPOSE_A\n    #define A_STRIDE_K 1\n    #define A_STRIDE_M K\n#else\n    #define A_STRIDE_K M\n    #define A_STRIDE_M 1\n#endif\n\n#if TRANSPOSE_B\n    #define B_STRIDE_K N\n    #define B_STRIDE_N 1\n#else\n    #define B_STRIDE_K 1\n    #define B_STRIDE_N K\n#endif\n\n#define WITH_BIAS 0\n#define HAS_INLINE 1\n\n\n#if K_DIVIDABLE_BY_8 && M_DIVIDABLE_BY_64  && N_DIVIDABLE_BY_64 && !TRANSPOSE_A && TRANSPOSE_B && OPTIMIZE\n    const device float4 *load_target4 = (index & 32) \n        ? (const device float4 *)((static_buffer + meta_buffer[1])) \n        : (const device float4 *)((static_buffer + meta_buffer[0]));\n#else\n    const device float *load_target = (index & 32) \n        ? ((static_buffer + meta_buffer[1])) \n        : ((static_buffer + meta_buffer[0]));\n#endif\n\n    const int M = meta_buffer[4];\n    const int N = meta_buffer[5];\n\n    const int K = meta_buffer[6];\n\n    threadgroup float4 shared4[32 * 8 * 2];\n\n    const int stride_k = (index & 32) ? B_STRIDE_K : A_STRIDE_K;\n    const int stride_mn = (index & 32) ? B_STRIDE_N : A_STRIDE_M;\n\n    const int m_offset = index & 7;\n    const int n_offset = index >> 3;\n\n    const int mn_load_offset = ((index & 32) ? group_position.y : group_position.x) * 64 + (index & 15) * 4;\n    const int k_load_offset = ((index & 16) ? 1 : 0);\n\n    int track0 = mn_load_offset * stride_mn + (k_load_offset + 0) * stride_k;\n    int track2 = track0 + 2 * stride_k;\n    int track4 = track0 + 4 * stride_k;\n    int track6 = track0 + 6 * stride_k;\n\n#if !OPTIMIZE || !M_DIVIDABLE_BY_64 || !N_DIVIDABLE_BY_64\n    const int max_MN = (index & 32) ? N : M;\n#endif\n\n    int shared_offset4 = ((index & 32) ? 16 : 0) + k_load_offset * 32 + (index & 15);\n    int read_A_offset4 = m_offset * 2;\n    int read_B_offset4 = n_offset * 2 + 16;\n\n    float4 result[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n    int k = 0;\n\n    while (k < K)\n    {\n        {\n#if OPTIMIZE && K_DIVIDABLE_BY_8\n    #if OPTIMIZE && M_DIVIDABLE_BY_64 && N_DIVIDABLE_BY_64\n        #if OPTIMIZE && !TRANSPOSE_A && TRANSPOSE_B\n            shared4[shared_offset4 + 32 * 0] = load_target4[track0 >> 2];\n            shared4[shared_offset4 + 32 * 2] = load_target4[track2 >> 2];\n            shared4[shared_offset4 + 32 * 4] = load_target4[track4 >> 2];\n            shared4[shared_offset4 + 32 * 6] = load_target4[track6 >> 2];\n        #else\n            shared4[shared_offset4 + 32 * 0] = float4(\n                load_target[track0 + stride_mn * 0],\n                load_target[track0 + stride_mn * 1],\n                load_target[track0 + stride_mn * 2],\n                load_target[track0 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 2] = float4(\n                load_target[track2 + stride_mn * 0],\n                load_target[track2 + stride_mn * 1],\n                load_target[track2 + stride_mn * 2],\n                load_target[track2 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 4] = float4(\n                load_target[track4 + stride_mn * 0],\n                load_target[track4 + stride_mn * 1],\n                load_target[track4 + stride_mn * 2],\n                load_target[track4 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 6] = float4(\n                load_target[track6 + stride_mn * 0],\n                load_target[track6 + stride_mn * 1],\n                load_target[track6 + stride_mn * 2],\n                load_target[track6 + stride_mn * 3]\n            ); \n        #endif\n    #else\n            shared4[shared_offset4 + 32 * 0] = float4(\n                (mn_load_offset + 0 >= max_MN) ? 0 : load_target[track0 + stride_mn * 0],\n                (mn_load_offset + 1 >= max_MN) ? 0 : load_target[track0 + stride_mn * 1],\n                (mn_load_offset + 2 >= max_MN) ? 0 : load_target[track0 + stride_mn * 2],\n                (mn_load_offset + 3 >= max_MN) ? 0 : load_target[track0 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 2] = float4(\n                (mn_load_offset + 0 >= max_MN) ? 0 : load_target[track2 + stride_mn * 0],\n                (mn_load_offset + 1 >= max_MN) ? 0 : load_target[track2 + stride_mn * 1],\n                (mn_load_offset + 2 >= max_MN) ? 0 : load_target[track2 + stride_mn * 2],\n                (mn_load_offset + 3 >= max_MN) ? 0 : load_target[track2 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 4] = float4(\n                (mn_load_offset + 0 >= max_MN) ? 0 : load_target[track4 + stride_mn * 0],\n                (mn_load_offset + 1 >= max_MN) ? 0 : load_target[track4 + stride_mn * 1],\n                (mn_load_offset + 2 >= max_MN) ? 0 : load_target[track4 + stride_mn * 2],\n                (mn_load_offset + 3 >= max_MN) ? 0 : load_target[track4 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 6] = float4(\n                (mn_load_offset + 0 >= max_MN) ? 0 : load_target[track6 + stride_mn * 0],\n                (mn_load_offset + 1 >= max_MN) ? 0 : load_target[track6 + stride_mn * 1],\n                (mn_load_offset + 2 >= max_MN) ? 0 : load_target[track6 + stride_mn * 2],\n                (mn_load_offset + 3 >= max_MN) ? 0 : load_target[track6 + stride_mn * 3]\n            ); \n    #endif\n\n            k += 8;\n#else\n    #if OPTIMIZE && M_DIVIDABLE_BY_64 && N_DIVIDABLE_BY_64\n            shared4[shared_offset4 + 32 * 0] = float4(\n                (k + k_load_offset >= K) ? 0 : load_target[track0 + stride_mn * 0],\n                (k + k_load_offset >= K) ? 0 : load_target[track0 + stride_mn * 1],\n                (k + k_load_offset >= K) ? 0 : load_target[track0 + stride_mn * 2],\n                (k + k_load_offset >= K) ? 0 : load_target[track0 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 2] = float4(\n                (k + k_load_offset >= K) ? 0 : load_target[track2 + stride_mn * 0],\n                (k + k_load_offset >= K) ? 0 : load_target[track2 + stride_mn * 1],\n                (k + k_load_offset >= K) ? 0 : load_target[track2 + stride_mn * 2],\n                (k + k_load_offset >= K) ? 0 : load_target[track2 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 4] = float4(\n                (k + k_load_offset >= K) ? 0 : load_target[track4 + stride_mn * 0],\n                (k + k_load_offset >= K) ? 0 : load_target[track4 + stride_mn * 1],\n                (k + k_load_offset >= K) ? 0 : load_target[track4 + stride_mn * 2],\n                (k + k_load_offset >= K) ? 0 : load_target[track4 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 6] = float4(\n                (k + k_load_offset >= K) ? 0 : load_target[track6 + stride_mn * 0],\n                (k + k_load_offset >= K) ? 0 : load_target[track6 + stride_mn * 1],\n                (k + k_load_offset >= K) ? 0 : load_target[track6 + stride_mn * 2],\n                (k + k_load_offset >= K) ? 0 : load_target[track6 + stride_mn * 3]\n            ); \n            k += 2;\n    #else\n            shared4[shared_offset4 + 32 * 0] = float4(\n                (k + k_load_offset >= K || mn_load_offset + 0 >= max_MN) ? 0 : load_target[track0 + stride_mn * 0],\n                (k + k_load_offset >= K || mn_load_offset + 1 >= max_MN) ? 0 : load_target[track0 + stride_mn * 1],\n                (k + k_load_offset >= K || mn_load_offset + 2 >= max_MN) ? 0 : load_target[track0 + stride_mn * 2],\n                (k + k_load_offset >= K || mn_load_offset + 3 >= max_MN) ? 0 : load_target[track0 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 2] = float4(\n                (k + k_load_offset >= K || mn_load_offset + 0 >= max_MN) ? 0 : load_target[track2 + stride_mn * 0],\n                (k + k_load_offset >= K || mn_load_offset + 1 >= max_MN) ? 0 : load_target[track2 + stride_mn * 1],\n                (k + k_load_offset >= K || mn_load_offset + 2 >= max_MN) ? 0 : load_target[track2 + stride_mn * 2],\n                (k + k_load_offset >= K || mn_load_offset + 3 >= max_MN) ? 0 : load_target[track2 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 4] = float4(\n                (k + k_load_offset >= K || mn_load_offset + 0 >= max_MN) ? 0 : load_target[track4 + stride_mn * 0],\n                (k + k_load_offset >= K || mn_load_offset + 1 >= max_MN) ? 0 : load_target[track4 + stride_mn * 1],\n                (k + k_load_offset >= K || mn_load_offset + 2 >= max_MN) ? 0 : load_target[track4 + stride_mn * 2],\n                (k + k_load_offset >= K || mn_load_offset + 3 >= max_MN) ? 0 : load_target[track4 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 6] = float4(\n                (k + k_load_offset >= K || mn_load_offset + 0 >= max_MN) ? 0 : load_target[track6 + stride_mn * 0],\n                (k + k_load_offset >= K || mn_load_offset + 1 >= max_MN) ? 0 : load_target[track6 + stride_mn * 1],\n                (k + k_load_offset >= K || mn_load_offset + 2 >= max_MN) ? 0 : load_target[track6 + stride_mn * 2],\n                (k + k_load_offset >= K || mn_load_offset + 3 >= max_MN) ? 0 : load_target[track6 + stride_mn * 3]\n            ); \n            k += 2;\n    #endif\n#endif\n        }\n\n        threadgroup_barrier(mem_flags::mem_threadgroup);\n\n        {\n            for (int k_sub = 0; k_sub < 8; k_sub++)\n            {\n                float4 a00 = shared4[32 * k_sub + read_A_offset4 + 0];\n                float4 a01 = shared4[32 * k_sub + read_A_offset4 + 1];\n                float4 b00 = shared4[32 * k_sub + read_B_offset4 + 0];\n                float4 b01 = shared4[32 * k_sub + read_B_offset4 + 1];\n\n                result[4][0]  += b00[0] * a00[2];\n                result[4][1]  += b00[1] * a00[2];\n                result[0][1]  += b00[1] * a00[0];\n                result[0][0]  += b00[0] * a00[0];\n                result[6][0]  += b00[0] * a00[3];\n                result[6][1]  += b00[1] * a00[3];\n                result[2][1]  += b00[1] * a00[1];\n                result[2][0]  += b00[0] * a00[1];\n                result[12][0] += b00[0] * a01[2];\n                result[12][1] += b00[1] * a01[2];\n                result[8][1]  += b00[1] * a01[0];\n                result[8][0]  += b00[0] * a01[0];\n                result[14][0] += b00[0] * a01[3];\n                result[14][1] += b00[1] * a01[3];\n                result[10][1] += b00[1] * a01[1];\n                result[10][0] += b00[0] * a01[1];\n\n                result[14][2] += b00[2] * a01[3];\n                result[14][3] += b00[3] * a01[3];\n                result[10][3] += b00[3] * a01[1];\n                result[10][2] += b00[2] * a01[1];\n                result[12][2] += b00[2] * a01[2];\n                result[12][3] += b00[3] * a01[2];\n                result[8][3]  += b00[3] * a01[0];\n                result[8][2]  += b00[2] * a01[0];\n                result[6][2]  += b00[2] * a00[3];\n                result[6][3]  += b00[3] * a00[3];\n                result[2][3]  += b00[3] * a00[1];\n                result[2][2]  += b00[2] * a00[1];\n                result[4][2]  += b00[2] * a00[2];\n                result[4][3]  += b00[3] * a00[2];\n                result[0][3]  += b00[3] * a00[0];\n                result[0][2]  += b00[2] * a00[0];\n\n                result[5][0]  += b01[0] * a00[2];\n                result[5][1]  += b01[1] * a00[2];\n                result[1][1]  += b01[1] * a00[0];\n                result[1][0]  += b01[0] * a00[0];\n                result[7][0]  += b01[0] * a00[3];\n                result[7][1]  += b01[1] * a00[3];\n                result[3][1]  += b01[1] * a00[1];\n                result[3][0]  += b01[0] * a00[1];\n                result[13][0] += b01[0] * a01[2];\n                result[13][1] += b01[1] * a01[2];\n                result[9][1]  += b01[1] * a01[0];\n                result[9][0]  += b01[0] * a01[0];\n                result[15][0] += b01[0] * a01[3];\n                result[15][1] += b01[1] * a01[3];\n                result[11][1] += b01[1] * a01[1];\n                result[11][0] += b01[0] * a01[1];\n\n                result[15][2] += b01[2] * a01[3];\n                result[15][3] += b01[3] * a01[3];\n                result[11][3] += b01[3] * a01[1];\n                result[11][2] += b01[2] * a01[1];\n                result[13][2] += b01[2] * a01[2];\n                result[13][3] += b01[3] * a01[2];\n                result[9][3]  += b01[3] * a01[0];\n                result[9][2]  += b01[2] * a01[0];\n                result[7][2]  += b01[2] * a00[3];\n                result[7][3]  += b01[3] * a00[3];\n                result[3][3]  += b01[3] * a00[1];\n                result[3][2]  += b01[2] * a00[1];\n                result[5][2]  += b01[2] * a00[2];\n                result[5][3]  += b01[3] * a00[2];\n                result[1][3]  += b01[3] * a00[0];\n                result[1][2]  += b01[2] * a00[0];\n            }\n        }\n\n        shared_offset4 ^= 32 * 8;\n        read_A_offset4 ^= 32 * 8;\n        read_B_offset4 ^= 32 * 8;\n        track0 += stride_k * 8;\n        track2 += stride_k * 8;\n        track4 += stride_k * 8;\n        track6 += stride_k * 8;\n    }\n\n    {\n    \n#if OPTIMIZE && N_DIVIDABLE_BY_64\n    #if WITH_BIAS\n        float4 b[2];\n        const device float4 *bias4 = (const device float4 *)(meta_buffer[3]);\n        b[0] = bias4[group_position.y * 16 + n_offset * 2 + 0];\n        b[1] = bias4[group_position.y * 16 + n_offset * 2 + 1];\n    #endif\n    \n        device float4 *C4 = (device float4 *)((static_buffer + meta_buffer[2]));\n        const int N4 = N >> 2;\n        int m = group_position.x * 64 + m_offset * 8;\n        for (int m_sub = 0; m_sub < 8; m_sub++)\n        {\n\n    #if !M_DIVIDABLE_BY_64\n            if (m >= M) continue;\n    #endif\n\n            const int n = group_position.y * 16 + n_offset * 2;\n            float4 result0 = result[m_sub * 2 + 0];\n            float4 result1 = result[m_sub * 2 + 1];\n\n    #if WITH_BIAS\n            result0 += b[0];\n            result1 += b[1];\n    #endif\n\n    #if HAS_INLINE\n            result0[0] = result0[0];\n            result0[1] = result0[1];\n            result0[2] = result0[2];\n            result0[3] = result0[3];\n            result1[0] = result1[0];\n            result1[1] = result1[1];\n            result1[2] = result1[2];\n            result1[3] = result1[3];\n    #endif\n\n            C4[m * N4 + n + 0] = result0;\n            C4[m * N4 + n + 1] = result1;\n            \n            m++;\n        }\n#else\n    #if WITH_BIAS\n        const device float *bias = meta_buffer[3];\n        float b[8];\n        for (int n_sub = 0; n_sub < 8; n_sub++)\n        {\n            b[n_sub] = (group_position.y * 64 + n_offset * 8 + n_sub < N)\n                ? bias[group_position.y * 64 + n_offset * 8 + n_sub]\n                : 0;\n        }\n    #endif\n\n        device float *C = (static_buffer + meta_buffer[2]);\n        int m = group_position.x * 64 + m_offset * 8;\n        for (int m_sub = 0; m_sub < 8; m_sub++)\n        {\n            int n = group_position.y * 64 + n_offset * 8;\n\n            for (int n_sub1 = 0; n_sub1 < 2; n_sub1++)\n            {\n                for (int n_sub2 = 0; n_sub2 < 4; n_sub2++)\n                {\n\n    #if WITH_BIAS\n        #if OPTIMIZE && M_DIVIDABLE_BY_64\n                    (         n < N) ? (C[m * N + n] = result[m_sub * 2 + n_sub1][n_sub2] + b[n_sub1*4+n_sub2]) : 0;\n        #else\n                    (m < M && n < N) ? (C[m * N + n] = result[m_sub * 2 + n_sub1][n_sub2] + b[n_sub1*4+n_sub2]) : 0;\n        #endif\n    #else\n        #if OPTIMIZE && M_DIVIDABLE_BY_64\n                    (         n < N) ? (C[m * N + n] = result[m_sub * 2 + n_sub1][n_sub2]) : 0;\n        #else\n                    (m < M && n < N) ? (C[m * N + n] = result[m_sub * 2 + n_sub1][n_sub2]) : 0;\n        #endif\n    #endif\n                    n++;\n                }\n            }\n            \n            m++;\n        }\n#endif\n\n    }\n\n\n#undef M_DIVIDABLE_BY_64\n#undef N_DIVIDABLE_BY_64\n#undef K_DIVIDABLE_BY_8\n#undef TRANSPOSE_A\n#undef TRANSPOSE_B\n#undef A_STRIDE_K\n#undef B_STRIDE_K\n#undef A_STRIDE_M\n#undef A_STRIDE_M\n#undef WITH_BIAS\n#undef HAS_INLINE\n}\n\n\nkernel void axiswisebias_6d3cc625dff5cb7118e081c9e962a21a90eec1e99a563ed4c4102b8d(device float * static_buffer[[buffer(0)]],\n                          device float * dynamic_buffer[[buffer(1)]],\n                          const device int * meta_buffer [[buffer(2)]],\n                          uint index[[thread_position_in_grid]],\n                          uint num_threads[[threads_per_grid]])\n{\n#define FLAG_D1_EQUAL_1 1\n#define FLAG_D3_EQUAL_1 1\n\n    const device float *X = (static_buffer + meta_buffer[0]);\n    const device float *B = (static_buffer + meta_buffer[1]);\n    device float *Y = (static_buffer + meta_buffer[2]);\n\n#if !OPTIMIZE || !FLAG_D1_EQUAL_1\n    const int D1 = meta_buffer[3];\n#endif\n\n    const int D2 = meta_buffer[4];\n\n#if !OPTIMIZE || !FLAG_D3_EQUAL_1\n    const int D3 = meta_buffer[5];\n#endif\n\n#if OPTIMIZE && FLAG_D3_EQUAL_1\n    #if OPTIMIZE && FLAG_D1_EQUAL_1\n        for (int gid = index; gid < D2; gid += num_threads) {\n            const int d2 = gid;\n    #else\n        for (int gid = index; gid < D1 * D2; gid += num_threads) {\n            const int d2 = gid % D2;\n    #endif\n\n#else\n\n    #if OPTIMIZE && FLAG_D1_EQUAL_1\n        for (int gid = index; gid < D2 * D3; gid += num_threads) {\n            const int d2 = gid / D3 % D2;\n    \n    #else\n        for (int gid = index; gid < D1 * D2 * D3; gid += num_threads) {\n            const int d2 = gid / D3 % D2;\n    #endif\n\n#endif\n\n        float v = X[gid] + B[d2];\n\n        Y[gid] = v;\n    }\n\n#undef FLAG_D1_EQUAL_1\n#undef FLAG_D3_EQUAL_1\n}\n\n\nkernel void axiswisescale_8c8d07a21f8ee3baa3bf2e75ba2477be96db8265f45a16350532a8cc(device float * static_buffer[[buffer(0)]],\n                          device float * dynamic_buffer[[buffer(1)]],\n                          const device int * meta_buffer [[buffer(2)]],\n                          uint index[[thread_position_in_grid]],\n                          uint num_threads[[threads_per_grid]])\n{\n#define FLAG_D1_EQUAL_1 1\n#define FLAG_D3_EQUAL_1 1\n\n    const device float *X = (static_buffer + meta_buffer[0]);\n    const device float *S = (static_buffer + meta_buffer[1]);\n    device float *Y = (static_buffer + meta_buffer[2]);\n\n#if !OPTIMIZE || !FLAG_D1_EQUAL_1\n    const int D1 = meta_buffer[3];\n#endif\n\n    const int D2 = meta_buffer[4];\n\n#if !OPTIMIZE || !FLAG_D3_EQUAL_1\n    const int D3 = meta_buffer[5];\n#endif\n\n#if OPTIMIZE && FLAG_D3_EQUAL_1\n    #if OPTIMIZE && FLAG_D1_EQUAL_1\n        for (int gid = index; gid < D2; gid += num_threads) {\n            const int d2 = gid;\n    #else\n        for (int gid = index; gid < D1 * D2; gid += num_threads) {\n            const int d2 = gid % D2;\n    #endif\n\n#else\n\n    #if OPTIMIZE && FLAG_D1_EQUAL_1\n        for (int gid = index; gid < D2 * D3; gid += num_threads) {\n            const int d2 = gid / D3 % D2;\n\n    #else\n        for (int gid = index; gid < D1 * D2 * D3; gid += num_threads) {\n            const int d2 = gid / D3 % D2;\n    #endif\n\n#endif\n\n        float v = X[gid] * S[d2];\n\n        Y[gid] = v;\n    }\n\n#undef FLAG_D1_EQUAL_1\n#undef FLAG_D3_EQUAL_1\n}\n\n\nkernel void relu_25832aa5796e7a508104453f16f73bd8877ea4d72763523055815ecb(device float * static_buffer[[buffer(0)]],\n                          device float * dynamic_buffer[[buffer(1)]],\n                          const device int * meta_buffer [[buffer(2)]],\n                          uint index[[thread_position_in_grid]],\n                          uint num_threads[[threads_per_grid]])\n{\n    device float *Y = (static_buffer + meta_buffer[0]);\n    const int N = meta_buffer[2];\n\nfloat y;\nfloat x0;\nconst device float *X0 = (meta_buffer[3+1+ (0)] ? static_buffer : dynamic_buffer) + meta_buffer[3 + (0)];\n    \n    for (int i = index; i < N; i+= num_threads)\n    {\n\n\n\nx0 = X0[i];\n\n        {\ny = x0 > 0 ? x0 : 0;\n        }\n\n        Y[i] = y;\n    }\n}\n\n\nkernel void reshape_16bccba9a464498806aabf37d42e7f652af6d3922196b61ef1ee5108(device float * static_buffer[[buffer(0)]],\n                          device float * dynamic_buffer[[buffer(1)]],\n                          const device int * meta_buffer [[buffer(2)]],\n                          uint index[[thread_position_in_grid]],\n                          uint num_threads[[threads_per_grid]])\n{\n    const device float *x = (static_buffer + meta_buffer[0]);\n    device float *y = (static_buffer + meta_buffer[1]);\n\n    const int N = meta_buffer[2];\n\n    for (int gid = index; gid < N; gid += num_threads) {\n        y[gid] = x[gid];\n    }\n}\n\n\nkernel void transpose_f2a777777e3fcf71c57cc96369c299008f7e5794ffc98daa66ce2d55(device float * static_buffer[[buffer(0)]],\n                          device float * dynamic_buffer[[buffer(1)]],\n                          const device int * meta_buffer [[buffer(2)]],\n                          uint index[[thread_position_in_grid]],\n                          uint num_threads[[threads_per_grid]])\n{\n    device float *Y = (static_buffer + meta_buffer[0]);\n    const int N = meta_buffer[2];\n\nfloat y;\nfloat x0;\nconst device float *X0 = (meta_buffer[3+1+ (0)] ? static_buffer : dynamic_buffer) + meta_buffer[3 + (0)];\nconst char D = meta_buffer[1];\nconst device int *X_shapes = (&(meta_buffer[9]));\nconst device int *X_strides_in_Y = (&(meta_buffer[5]));\n    \n    for (int i = index; i < N; i+= num_threads)\n    {\n\nint i_x0 = 0;\nfor (int d = 0; d < D; d++) {\ni_x0 = i_x0 * X_shapes[D*0 + d] + ((i / X_strides_in_Y[D*0 + d]) % X_shapes[D*0 + d]);\n}\n\n\nx0 = X0[i_x0];\n\n        {\ny = x0;\n        }\n\n        Y[i] = y;\n    }\n}\n\n\nkernel void im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3(device float * static_buffer[[buffer(0)]],\n                          device float * dynamic_buffer[[buffer(1)]],\n                          const device int * meta_buffer [[buffer(2)]],\n                          ushort index_thread[[thread_position_in_threadgroup]],\n                          ushort index_group[[threadgroup_position_in_grid]])\n{\n#define SH_EQUAL_1 1\n#define SW_EQUAL_1 1\n#define C1_DIVIDABLE_BY_4 1\n\n\n#if OPTIMIZE && C1_DIVIDABLE_BY_4\n    const device float4 *im4 = (const device float4 *)((static_buffer + meta_buffer[0]));\n    device float4 *col4 = (device float4 *)((static_buffer + meta_buffer[1]));\n    const int C1_4 = (meta_buffer[3]) >> 2;\n#else\n    const device float *im = (static_buffer + meta_buffer[0]);\n    device float *col = (static_buffer + meta_buffer[1]);\n    const int C1 = meta_buffer[3];\n#endif\n\n    const int H1 = meta_buffer[4];\n    const int W1 = meta_buffer[5];\n    const int H2 = meta_buffer[6];\n    const int W2 = meta_buffer[7];\n    const int KH = meta_buffer[8];\n    const int KW = meta_buffer[9];\n    const int DH = meta_buffer[10];\n    const int DW = meta_buffer[11];\n    const int PH = meta_buffer[14];\n    const int PW = meta_buffer[15];\n\n#if !OPTIMIZE || !SH_EQUAL_1\n    const int SH = meta_buffer[12];\n#endif\n\n#if !OPTIMIZE || !SW_EQUAL_1\n    const int SW = meta_buffer[13];\n#endif\n\n    const int H1P = H1 + 2 * PH;\n    const int W1P = W1 + 2 * PW;\n\n    const int w1 = (index_group % W1P) - PW;\n    const int h1 = (index_group / W1P % H1P) - PH;\n    const int  n = index_group / W1P / H1P;\n\n#if OPTIMIZE && C1_DIVIDABLE_BY_4\n    for (int c1_4 = index_thread; c1_4 < C1_4; c1_4 += 64) {\n        const float4 v4 = (h1 < 0 || h1 >= H1 || w1 < 0 || w1 >= W1) ? 0 : im4[((n * H1 + h1) * W1 + w1) * C1_4 + c1_4];\n#else\n    for (int c1 = index_thread; c1 < C1; c1 += 64) {\n        const float v = (h1 < 0 || h1 >= H1 || w1 < 0 || w1 >= W1) ? 0 : im[((n * H1 + h1) * W1 + w1) * C1 + c1];\n#endif\n\n#if OPTIMIZE && SH_EQUAL_1\n        for (int kh = 0; kh < KH; kh++) {\n            const int h2 = h1 + PH - kh * DH;\n#else\n        for (int kh = (h1 + PH) % SH; kh < KH; kh += SH) {\n            const int h2 = (h1 + PH - kh * DH) / SH;\n#endif\n            if (h2 < 0 || h2 >= H2) continue;\n\n#if OPTIMIZE && SH_EQUAL_1\n            for (int kw = 0; kw < KW; kw++) {\n                const int w2 = w1 + PW - kw * DW;\n#else\n            for (int kw = (w1 + PW) % SW; kw < KW; kw += SW) {\n                const int w2 = (w1 + PW - kw * DW) / SW;\n#endif\n                if (w2 < 0 || w2 >= W2) continue;\n\n#if OPTIMIZE && C1_DIVIDABLE_BY_4\n                col4[((((n * H2 + h2) * W2 + w2) * KH + kh) * KW + kw) * C1_4 + c1_4] = v4;\n#else\n                col[((((n * H2 + h2) * W2 + w2) * KH + kh) * KW + kw) * C1 + c1] = v;\n#endif\n            }\n        }\n    }\n\n\n#undef SH_EQUAL_1\n#undef SW_EQUAL_1\n#undef C1_DIVIDABLE_BY_4\n}\n\n\nkernel void sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b(device float * static_buffer[[buffer(0)]],\n                          device float * dynamic_buffer[[buffer(1)]],\n                          const device int * meta_buffer [[buffer(2)]],\n                          ushort index[[thread_index_in_threadgroup]],\n                          ushort2 group_position[[threadgroup_position_in_grid]])\n{\n#define TRANSPOSE_A 1\n#define TRANSPOSE_B 1\n#define M_DIVIDABLE_BY_64 1\n#define N_DIVIDABLE_BY_64 1\n#define K_DIVIDABLE_BY_8 1\n\n#if TRANSPOSE_A\n    #define A_STRIDE_K 1\n    #define A_STRIDE_M K\n#else\n    #define A_STRIDE_K M\n    #define A_STRIDE_M 1\n#endif\n\n#if TRANSPOSE_B\n    #define B_STRIDE_K N\n    #define B_STRIDE_N 1\n#else\n    #define B_STRIDE_K 1\n    #define B_STRIDE_N K\n#endif\n\n#define WITH_BIAS 0\n#define HAS_INLINE 1\n\n\n#if K_DIVIDABLE_BY_8 && M_DIVIDABLE_BY_64  && N_DIVIDABLE_BY_64 && !TRANSPOSE_A && TRANSPOSE_B && OPTIMIZE\n    const device float4 *load_target4 = (index & 32) \n        ? (const device float4 *)((static_buffer + meta_buffer[1])) \n        : (const device float4 *)((static_buffer + meta_buffer[0]));\n#else\n    const device float *load_target = (index & 32) \n        ? ((static_buffer + meta_buffer[1])) \n        : ((static_buffer + meta_buffer[0]));\n#endif\n\n    const int M = meta_buffer[4];\n    const int N = meta_buffer[5];\n\n    const int K = meta_buffer[6];\n\n    threadgroup float4 shared4[32 * 8 * 2];\n\n    const int stride_k = (index & 32) ? B_STRIDE_K : A_STRIDE_K;\n    const int stride_mn = (index & 32) ? B_STRIDE_N : A_STRIDE_M;\n\n    const int m_offset = index & 7;\n    const int n_offset = index >> 3;\n\n    const int mn_load_offset = ((index & 32) ? group_position.y : group_position.x) * 64 + (index & 15) * 4;\n    const int k_load_offset = ((index & 16) ? 1 : 0);\n\n    int track0 = mn_load_offset * stride_mn + (k_load_offset + 0) * stride_k;\n    int track2 = track0 + 2 * stride_k;\n    int track4 = track0 + 4 * stride_k;\n    int track6 = track0 + 6 * stride_k;\n\n#if !OPTIMIZE || !M_DIVIDABLE_BY_64 || !N_DIVIDABLE_BY_64\n    const int max_MN = (index & 32) ? N : M;\n#endif\n\n    int shared_offset4 = ((index & 32) ? 16 : 0) + k_load_offset * 32 + (index & 15);\n    int read_A_offset4 = m_offset * 2;\n    int read_B_offset4 = n_offset * 2 + 16;\n\n    float4 result[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n    int k = 0;\n\n    while (k < K)\n    {\n        {\n#if OPTIMIZE && K_DIVIDABLE_BY_8\n    #if OPTIMIZE && M_DIVIDABLE_BY_64 && N_DIVIDABLE_BY_64\n        #if OPTIMIZE && !TRANSPOSE_A && TRANSPOSE_B\n            shared4[shared_offset4 + 32 * 0] = load_target4[track0 >> 2];\n            shared4[shared_offset4 + 32 * 2] = load_target4[track2 >> 2];\n            shared4[shared_offset4 + 32 * 4] = load_target4[track4 >> 2];\n            shared4[shared_offset4 + 32 * 6] = load_target4[track6 >> 2];\n        #else\n            shared4[shared_offset4 + 32 * 0] = float4(\n                load_target[track0 + stride_mn * 0],\n                load_target[track0 + stride_mn * 1],\n                load_target[track0 + stride_mn * 2],\n                load_target[track0 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 2] = float4(\n                load_target[track2 + stride_mn * 0],\n                load_target[track2 + stride_mn * 1],\n                load_target[track2 + stride_mn * 2],\n                load_target[track2 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 4] = float4(\n                load_target[track4 + stride_mn * 0],\n                load_target[track4 + stride_mn * 1],\n                load_target[track4 + stride_mn * 2],\n                load_target[track4 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 6] = float4(\n                load_target[track6 + stride_mn * 0],\n                load_target[track6 + stride_mn * 1],\n                load_target[track6 + stride_mn * 2],\n                load_target[track6 + stride_mn * 3]\n            ); \n        #endif\n    #else\n            shared4[shared_offset4 + 32 * 0] = float4(\n                (mn_load_offset + 0 >= max_MN) ? 0 : load_target[track0 + stride_mn * 0],\n                (mn_load_offset + 1 >= max_MN) ? 0 : load_target[track0 + stride_mn * 1],\n                (mn_load_offset + 2 >= max_MN) ? 0 : load_target[track0 + stride_mn * 2],\n                (mn_load_offset + 3 >= max_MN) ? 0 : load_target[track0 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 2] = float4(\n                (mn_load_offset + 0 >= max_MN) ? 0 : load_target[track2 + stride_mn * 0],\n                (mn_load_offset + 1 >= max_MN) ? 0 : load_target[track2 + stride_mn * 1],\n                (mn_load_offset + 2 >= max_MN) ? 0 : load_target[track2 + stride_mn * 2],\n                (mn_load_offset + 3 >= max_MN) ? 0 : load_target[track2 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 4] = float4(\n                (mn_load_offset + 0 >= max_MN) ? 0 : load_target[track4 + stride_mn * 0],\n                (mn_load_offset + 1 >= max_MN) ? 0 : load_target[track4 + stride_mn * 1],\n                (mn_load_offset + 2 >= max_MN) ? 0 : load_target[track4 + stride_mn * 2],\n                (mn_load_offset + 3 >= max_MN) ? 0 : load_target[track4 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 6] = float4(\n                (mn_load_offset + 0 >= max_MN) ? 0 : load_target[track6 + stride_mn * 0],\n                (mn_load_offset + 1 >= max_MN) ? 0 : load_target[track6 + stride_mn * 1],\n                (mn_load_offset + 2 >= max_MN) ? 0 : load_target[track6 + stride_mn * 2],\n                (mn_load_offset + 3 >= max_MN) ? 0 : load_target[track6 + stride_mn * 3]\n            ); \n    #endif\n\n            k += 8;\n#else\n    #if OPTIMIZE && M_DIVIDABLE_BY_64 && N_DIVIDABLE_BY_64\n            shared4[shared_offset4 + 32 * 0] = float4(\n                (k + k_load_offset >= K) ? 0 : load_target[track0 + stride_mn * 0],\n                (k + k_load_offset >= K) ? 0 : load_target[track0 + stride_mn * 1],\n                (k + k_load_offset >= K) ? 0 : load_target[track0 + stride_mn * 2],\n                (k + k_load_offset >= K) ? 0 : load_target[track0 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 2] = float4(\n                (k + k_load_offset >= K) ? 0 : load_target[track2 + stride_mn * 0],\n                (k + k_load_offset >= K) ? 0 : load_target[track2 + stride_mn * 1],\n                (k + k_load_offset >= K) ? 0 : load_target[track2 + stride_mn * 2],\n                (k + k_load_offset >= K) ? 0 : load_target[track2 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 4] = float4(\n                (k + k_load_offset >= K) ? 0 : load_target[track4 + stride_mn * 0],\n                (k + k_load_offset >= K) ? 0 : load_target[track4 + stride_mn * 1],\n                (k + k_load_offset >= K) ? 0 : load_target[track4 + stride_mn * 2],\n                (k + k_load_offset >= K) ? 0 : load_target[track4 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 6] = float4(\n                (k + k_load_offset >= K) ? 0 : load_target[track6 + stride_mn * 0],\n                (k + k_load_offset >= K) ? 0 : load_target[track6 + stride_mn * 1],\n                (k + k_load_offset >= K) ? 0 : load_target[track6 + stride_mn * 2],\n                (k + k_load_offset >= K) ? 0 : load_target[track6 + stride_mn * 3]\n            ); \n            k += 2;\n    #else\n            shared4[shared_offset4 + 32 * 0] = float4(\n                (k + k_load_offset >= K || mn_load_offset + 0 >= max_MN) ? 0 : load_target[track0 + stride_mn * 0],\n                (k + k_load_offset >= K || mn_load_offset + 1 >= max_MN) ? 0 : load_target[track0 + stride_mn * 1],\n                (k + k_load_offset >= K || mn_load_offset + 2 >= max_MN) ? 0 : load_target[track0 + stride_mn * 2],\n                (k + k_load_offset >= K || mn_load_offset + 3 >= max_MN) ? 0 : load_target[track0 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 2] = float4(\n                (k + k_load_offset >= K || mn_load_offset + 0 >= max_MN) ? 0 : load_target[track2 + stride_mn * 0],\n                (k + k_load_offset >= K || mn_load_offset + 1 >= max_MN) ? 0 : load_target[track2 + stride_mn * 1],\n                (k + k_load_offset >= K || mn_load_offset + 2 >= max_MN) ? 0 : load_target[track2 + stride_mn * 2],\n                (k + k_load_offset >= K || mn_load_offset + 3 >= max_MN) ? 0 : load_target[track2 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 4] = float4(\n                (k + k_load_offset >= K || mn_load_offset + 0 >= max_MN) ? 0 : load_target[track4 + stride_mn * 0],\n                (k + k_load_offset >= K || mn_load_offset + 1 >= max_MN) ? 0 : load_target[track4 + stride_mn * 1],\n                (k + k_load_offset >= K || mn_load_offset + 2 >= max_MN) ? 0 : load_target[track4 + stride_mn * 2],\n                (k + k_load_offset >= K || mn_load_offset + 3 >= max_MN) ? 0 : load_target[track4 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 6] = float4(\n                (k + k_load_offset >= K || mn_load_offset + 0 >= max_MN) ? 0 : load_target[track6 + stride_mn * 0],\n                (k + k_load_offset >= K || mn_load_offset + 1 >= max_MN) ? 0 : load_target[track6 + stride_mn * 1],\n                (k + k_load_offset >= K || mn_load_offset + 2 >= max_MN) ? 0 : load_target[track6 + stride_mn * 2],\n                (k + k_load_offset >= K || mn_load_offset + 3 >= max_MN) ? 0 : load_target[track6 + stride_mn * 3]\n            ); \n            k += 2;\n    #endif\n#endif\n        }\n\n        threadgroup_barrier(mem_flags::mem_threadgroup);\n\n        {\n            for (int k_sub = 0; k_sub < 8; k_sub++)\n            {\n                float4 a00 = shared4[32 * k_sub + read_A_offset4 + 0];\n                float4 a01 = shared4[32 * k_sub + read_A_offset4 + 1];\n                float4 b00 = shared4[32 * k_sub + read_B_offset4 + 0];\n                float4 b01 = shared4[32 * k_sub + read_B_offset4 + 1];\n\n                result[4][0]  += b00[0] * a00[2];\n                result[4][1]  += b00[1] * a00[2];\n                result[0][1]  += b00[1] * a00[0];\n                result[0][0]  += b00[0] * a00[0];\n                result[6][0]  += b00[0] * a00[3];\n                result[6][1]  += b00[1] * a00[3];\n                result[2][1]  += b00[1] * a00[1];\n                result[2][0]  += b00[0] * a00[1];\n                result[12][0] += b00[0] * a01[2];\n                result[12][1] += b00[1] * a01[2];\n                result[8][1]  += b00[1] * a01[0];\n                result[8][0]  += b00[0] * a01[0];\n                result[14][0] += b00[0] * a01[3];\n                result[14][1] += b00[1] * a01[3];\n                result[10][1] += b00[1] * a01[1];\n                result[10][0] += b00[0] * a01[1];\n\n                result[14][2] += b00[2] * a01[3];\n                result[14][3] += b00[3] * a01[3];\n                result[10][3] += b00[3] * a01[1];\n                result[10][2] += b00[2] * a01[1];\n                result[12][2] += b00[2] * a01[2];\n                result[12][3] += b00[3] * a01[2];\n                result[8][3]  += b00[3] * a01[0];\n                result[8][2]  += b00[2] * a01[0];\n                result[6][2]  += b00[2] * a00[3];\n                result[6][3]  += b00[3] * a00[3];\n                result[2][3]  += b00[3] * a00[1];\n                result[2][2]  += b00[2] * a00[1];\n                result[4][2]  += b00[2] * a00[2];\n                result[4][3]  += b00[3] * a00[2];\n                result[0][3]  += b00[3] * a00[0];\n                result[0][2]  += b00[2] * a00[0];\n\n                result[5][0]  += b01[0] * a00[2];\n                result[5][1]  += b01[1] * a00[2];\n                result[1][1]  += b01[1] * a00[0];\n                result[1][0]  += b01[0] * a00[0];\n                result[7][0]  += b01[0] * a00[3];\n                result[7][1]  += b01[1] * a00[3];\n                result[3][1]  += b01[1] * a00[1];\n                result[3][0]  += b01[0] * a00[1];\n                result[13][0] += b01[0] * a01[2];\n                result[13][1] += b01[1] * a01[2];\n                result[9][1]  += b01[1] * a01[0];\n                result[9][0]  += b01[0] * a01[0];\n                result[15][0] += b01[0] * a01[3];\n                result[15][1] += b01[1] * a01[3];\n                result[11][1] += b01[1] * a01[1];\n                result[11][0] += b01[0] * a01[1];\n\n                result[15][2] += b01[2] * a01[3];\n                result[15][3] += b01[3] * a01[3];\n                result[11][3] += b01[3] * a01[1];\n                result[11][2] += b01[2] * a01[1];\n                result[13][2] += b01[2] * a01[2];\n                result[13][3] += b01[3] * a01[2];\n                result[9][3]  += b01[3] * a01[0];\n                result[9][2]  += b01[2] * a01[0];\n                result[7][2]  += b01[2] * a00[3];\n                result[7][3]  += b01[3] * a00[3];\n                result[3][3]  += b01[3] * a00[1];\n                result[3][2]  += b01[2] * a00[1];\n                result[5][2]  += b01[2] * a00[2];\n                result[5][3]  += b01[3] * a00[2];\n                result[1][3]  += b01[3] * a00[0];\n                result[1][2]  += b01[2] * a00[0];\n            }\n        }\n\n        shared_offset4 ^= 32 * 8;\n        read_A_offset4 ^= 32 * 8;\n        read_B_offset4 ^= 32 * 8;\n        track0 += stride_k * 8;\n        track2 += stride_k * 8;\n        track4 += stride_k * 8;\n        track6 += stride_k * 8;\n    }\n\n    {\n    \n#if OPTIMIZE && N_DIVIDABLE_BY_64\n    #if WITH_BIAS\n        float4 b[2];\n        const device float4 *bias4 = (const device float4 *)(meta_buffer[3]);\n        b[0] = bias4[group_position.y * 16 + n_offset * 2 + 0];\n        b[1] = bias4[group_position.y * 16 + n_offset * 2 + 1];\n    #endif\n    \n        device float4 *C4 = (device float4 *)((static_buffer + meta_buffer[2]));\n        const int N4 = N >> 2;\n        int m = group_position.x * 64 + m_offset * 8;\n        for (int m_sub = 0; m_sub < 8; m_sub++)\n        {\n\n    #if !M_DIVIDABLE_BY_64\n            if (m >= M) continue;\n    #endif\n\n            const int n = group_position.y * 16 + n_offset * 2;\n            float4 result0 = result[m_sub * 2 + 0];\n            float4 result1 = result[m_sub * 2 + 1];\n\n    #if WITH_BIAS\n            result0 += b[0];\n            result1 += b[1];\n    #endif\n\n    #if HAS_INLINE\n            result0[0] = result0[0];\n            result0[1] = result0[1];\n            result0[2] = result0[2];\n            result0[3] = result0[3];\n            result1[0] = result1[0];\n            result1[1] = result1[1];\n            result1[2] = result1[2];\n            result1[3] = result1[3];\n    #endif\n\n            C4[m * N4 + n + 0] = result0;\n            C4[m * N4 + n + 1] = result1;\n            \n            m++;\n        }\n#else\n    #if WITH_BIAS\n        const device float *bias = meta_buffer[3];\n        float b[8];\n        for (int n_sub = 0; n_sub < 8; n_sub++)\n        {\n            b[n_sub] = (group_position.y * 64 + n_offset * 8 + n_sub < N)\n                ? bias[group_position.y * 64 + n_offset * 8 + n_sub]\n                : 0;\n        }\n    #endif\n\n        device float *C = (static_buffer + meta_buffer[2]);\n        int m = group_position.x * 64 + m_offset * 8;\n        for (int m_sub = 0; m_sub < 8; m_sub++)\n        {\n            int n = group_position.y * 64 + n_offset * 8;\n\n            for (int n_sub1 = 0; n_sub1 < 2; n_sub1++)\n            {\n                for (int n_sub2 = 0; n_sub2 < 4; n_sub2++)\n                {\n\n    #if WITH_BIAS\n        #if OPTIMIZE && M_DIVIDABLE_BY_64\n                    (         n < N) ? (C[m * N + n] = result[m_sub * 2 + n_sub1][n_sub2] + b[n_sub1*4+n_sub2]) : 0;\n        #else\n                    (m < M && n < N) ? (C[m * N + n] = result[m_sub * 2 + n_sub1][n_sub2] + b[n_sub1*4+n_sub2]) : 0;\n        #endif\n    #else\n        #if OPTIMIZE && M_DIVIDABLE_BY_64\n                    (         n < N) ? (C[m * N + n] = result[m_sub * 2 + n_sub1][n_sub2]) : 0;\n        #else\n                    (m < M && n < N) ? (C[m * N + n] = result[m_sub * 2 + n_sub1][n_sub2]) : 0;\n        #endif\n    #endif\n                    n++;\n                }\n            }\n            \n            m++;\n        }\n#endif\n\n    }\n\n\n#undef M_DIVIDABLE_BY_64\n#undef N_DIVIDABLE_BY_64\n#undef K_DIVIDABLE_BY_8\n#undef TRANSPOSE_A\n#undef TRANSPOSE_B\n#undef A_STRIDE_K\n#undef B_STRIDE_K\n#undef A_STRIDE_M\n#undef A_STRIDE_M\n#undef WITH_BIAS\n#undef HAS_INLINE\n}\n\n\nkernel void axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268(device float * static_buffer[[buffer(0)]],\n                          device float * dynamic_buffer[[buffer(1)]],\n                          const device int * meta_buffer [[buffer(2)]],\n                          uint index[[thread_position_in_grid]],\n                          uint num_threads[[threads_per_grid]])\n{\n#define FLAG_D1_EQUAL_1 0\n#define FLAG_D3_EQUAL_1 1\n\n    const device float *X = (static_buffer + meta_buffer[0]);\n    const device float *B = (static_buffer + meta_buffer[1]);\n    device float *Y = (static_buffer + meta_buffer[2]);\n\n#if !OPTIMIZE || !FLAG_D1_EQUAL_1\n    const int D1 = meta_buffer[3];\n#endif\n\n    const int D2 = meta_buffer[4];\n\n#if !OPTIMIZE || !FLAG_D3_EQUAL_1\n    const int D3 = meta_buffer[5];\n#endif\n\n#if OPTIMIZE && FLAG_D3_EQUAL_1\n    #if OPTIMIZE && FLAG_D1_EQUAL_1\n        for (int gid = index; gid < D2; gid += num_threads) {\n            const int d2 = gid;\n    #else\n        for (int gid = index; gid < D1 * D2; gid += num_threads) {\n            const int d2 = gid % D2;\n    #endif\n\n#else\n\n    #if OPTIMIZE && FLAG_D1_EQUAL_1\n        for (int gid = index; gid < D2 * D3; gid += num_threads) {\n            const int d2 = gid / D3 % D2;\n    \n    #else\n        for (int gid = index; gid < D1 * D2 * D3; gid += num_threads) {\n            const int d2 = gid / D3 % D2;\n    #endif\n\n#endif\n\n        float v = X[gid] + B[d2];\n\n        Y[gid] = v;\n    }\n\n#undef FLAG_D1_EQUAL_1\n#undef FLAG_D3_EQUAL_1\n}\n\n\nkernel void axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244(device float * static_buffer[[buffer(0)]],\n                          device float * dynamic_buffer[[buffer(1)]],\n                          const device int * meta_buffer [[buffer(2)]],\n                          uint index[[thread_position_in_grid]],\n                          uint num_threads[[threads_per_grid]])\n{\n#define FLAG_D1_EQUAL_1 0\n#define FLAG_D3_EQUAL_1 1\n\n    const device float *X = (static_buffer + meta_buffer[0]);\n    const device float *S = (static_buffer + meta_buffer[1]);\n    device float *Y = (static_buffer + meta_buffer[2]);\n\n#if !OPTIMIZE || !FLAG_D1_EQUAL_1\n    const int D1 = meta_buffer[3];\n#endif\n\n    const int D2 = meta_buffer[4];\n\n#if !OPTIMIZE || !FLAG_D3_EQUAL_1\n    const int D3 = meta_buffer[5];\n#endif\n\n#if OPTIMIZE && FLAG_D3_EQUAL_1\n    #if OPTIMIZE && FLAG_D1_EQUAL_1\n        for (int gid = index; gid < D2; gid += num_threads) {\n            const int d2 = gid;\n    #else\n        for (int gid = index; gid < D1 * D2; gid += num_threads) {\n            const int d2 = gid % D2;\n    #endif\n\n#else\n\n    #if OPTIMIZE && FLAG_D1_EQUAL_1\n        for (int gid = index; gid < D2 * D3; gid += num_threads) {\n            const int d2 = gid / D3 % D2;\n\n    #else\n        for (int gid = index; gid < D1 * D2 * D3; gid += num_threads) {\n            const int d2 = gid / D3 % D2;\n    #endif\n\n#endif\n\n        float v = X[gid] * S[d2];\n\n        Y[gid] = v;\n    }\n\n#undef FLAG_D1_EQUAL_1\n#undef FLAG_D3_EQUAL_1\n}\n\n\nkernel void elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612(device float * static_buffer[[buffer(0)]],\n                          device float * dynamic_buffer[[buffer(1)]],\n                          const device int * meta_buffer [[buffer(2)]],\n                          uint index[[thread_position_in_grid]],\n                          uint num_threads[[threads_per_grid]])\n{\n    device float *Y = (static_buffer + meta_buffer[0]);\n    const int N = meta_buffer[2];\n\nfloat y;\nfloat x0, x1;\nconst device float *X0 = (meta_buffer[3+2+ (0)] ? static_buffer : dynamic_buffer) + meta_buffer[3 + (0)];\nconst device float *X1 = (meta_buffer[3+2+ (1)] ? static_buffer : dynamic_buffer) + meta_buffer[3 + (1)];\n    \n    for (int i = index; i < N; i+= num_threads)\n    {\n\n\n\nx0 = X0[i];\nx1 = X1[i];\n\n        {\ny = x0 + x1;\n        }\n\n        Y[i] = y;\n    }\n}\n\n\nkernel void depth2space_80400f914882037720ae1b1a8c35fd1640e44514f2d25ba012fd9f6f(device float * static_buffer[[buffer(0)]],\n                     device float * dynamic_buffer[[buffer(1)]],\n                     const device int * meta_buffer[[buffer(2)]],\n                     uint index[[thread_position_in_grid]],\n                     uint num_threads[[threads_per_grid]])\n{\n    const device float *x = (static_buffer + meta_buffer[0]);\n    device float *y = (static_buffer + meta_buffer[1]);\n    const int r = meta_buffer[2];\n\n    const int N = meta_buffer[3];\n    const int C1 = meta_buffer[4];\n    const int C2 = meta_buffer[5];\n    const int H1 = meta_buffer[6];\n    const int H2 = meta_buffer[7];\n    const int W1 = meta_buffer[8];\n    const int W2 = meta_buffer[9];\n\n    for (int gid = index; gid < N*H2*W2*C2; gid += num_threads) {\n        const int c2 = gid % C2;\n        const int w2 = gid / C2 % W2;\n        const int h2 = gid / C2 / W2 % H2;\n        const int n = gid / C2 / W2 / H2;\n        const int w1 = w2 / r;\n        const int h1 = h2 / r;\n        const int c1 = c2 + (w2 % r) * C2 + (h2 % r) * C2 * r;\n        y[gid] = x[((n*H1+h1)*W1+w1)*C1+c1];\n    }\n}\n\n\nkernel void sgemm_7a3a0cf4aa302a78f1757c63ffa9c6babc403b5113aa3e74d7345e93(device float * static_buffer[[buffer(0)]],\n                          device float * dynamic_buffer[[buffer(1)]],\n                          const device int * meta_buffer [[buffer(2)]],\n                          ushort index[[thread_index_in_threadgroup]],\n                          ushort2 group_position[[threadgroup_position_in_grid]])\n{\n#define TRANSPOSE_A 1\n#define TRANSPOSE_B 1\n#define M_DIVIDABLE_BY_64 1\n#define N_DIVIDABLE_BY_64 0\n#define K_DIVIDABLE_BY_8 1\n\n#if TRANSPOSE_A\n    #define A_STRIDE_K 1\n    #define A_STRIDE_M K\n#else\n    #define A_STRIDE_K M\n    #define A_STRIDE_M 1\n#endif\n\n#if TRANSPOSE_B\n    #define B_STRIDE_K N\n    #define B_STRIDE_N 1\n#else\n    #define B_STRIDE_K 1\n    #define B_STRIDE_N K\n#endif\n\n#define WITH_BIAS 0\n#define HAS_INLINE 1\n\n\n#if K_DIVIDABLE_BY_8 && M_DIVIDABLE_BY_64  && N_DIVIDABLE_BY_64 && !TRANSPOSE_A && TRANSPOSE_B && OPTIMIZE\n    const device float4 *load_target4 = (index & 32) \n        ? (const device float4 *)((static_buffer + meta_buffer[1])) \n        : (const device float4 *)((static_buffer + meta_buffer[0]));\n#else\n    const device float *load_target = (index & 32) \n        ? ((static_buffer + meta_buffer[1])) \n        : ((static_buffer + meta_buffer[0]));\n#endif\n\n    const int M = meta_buffer[4];\n    const int N = meta_buffer[5];\n\n    const int K = meta_buffer[6];\n\n    threadgroup float4 shared4[32 * 8 * 2];\n\n    const int stride_k = (index & 32) ? B_STRIDE_K : A_STRIDE_K;\n    const int stride_mn = (index & 32) ? B_STRIDE_N : A_STRIDE_M;\n\n    const int m_offset = index & 7;\n    const int n_offset = index >> 3;\n\n    const int mn_load_offset = ((index & 32) ? group_position.y : group_position.x) * 64 + (index & 15) * 4;\n    const int k_load_offset = ((index & 16) ? 1 : 0);\n\n    int track0 = mn_load_offset * stride_mn + (k_load_offset + 0) * stride_k;\n    int track2 = track0 + 2 * stride_k;\n    int track4 = track0 + 4 * stride_k;\n    int track6 = track0 + 6 * stride_k;\n\n#if !OPTIMIZE || !M_DIVIDABLE_BY_64 || !N_DIVIDABLE_BY_64\n    const int max_MN = (index & 32) ? N : M;\n#endif\n\n    int shared_offset4 = ((index & 32) ? 16 : 0) + k_load_offset * 32 + (index & 15);\n    int read_A_offset4 = m_offset * 2;\n    int read_B_offset4 = n_offset * 2 + 16;\n\n    float4 result[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n    int k = 0;\n\n    while (k < K)\n    {\n        {\n#if OPTIMIZE && K_DIVIDABLE_BY_8\n    #if OPTIMIZE && M_DIVIDABLE_BY_64 && N_DIVIDABLE_BY_64\n        #if OPTIMIZE && !TRANSPOSE_A && TRANSPOSE_B\n            shared4[shared_offset4 + 32 * 0] = load_target4[track0 >> 2];\n            shared4[shared_offset4 + 32 * 2] = load_target4[track2 >> 2];\n            shared4[shared_offset4 + 32 * 4] = load_target4[track4 >> 2];\n            shared4[shared_offset4 + 32 * 6] = load_target4[track6 >> 2];\n        #else\n            shared4[shared_offset4 + 32 * 0] = float4(\n                load_target[track0 + stride_mn * 0],\n                load_target[track0 + stride_mn * 1],\n                load_target[track0 + stride_mn * 2],\n                load_target[track0 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 2] = float4(\n                load_target[track2 + stride_mn * 0],\n                load_target[track2 + stride_mn * 1],\n                load_target[track2 + stride_mn * 2],\n                load_target[track2 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 4] = float4(\n                load_target[track4 + stride_mn * 0],\n                load_target[track4 + stride_mn * 1],\n                load_target[track4 + stride_mn * 2],\n                load_target[track4 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 6] = float4(\n                load_target[track6 + stride_mn * 0],\n                load_target[track6 + stride_mn * 1],\n                load_target[track6 + stride_mn * 2],\n                load_target[track6 + stride_mn * 3]\n            ); \n        #endif\n    #else\n            shared4[shared_offset4 + 32 * 0] = float4(\n                (mn_load_offset + 0 >= max_MN) ? 0 : load_target[track0 + stride_mn * 0],\n                (mn_load_offset + 1 >= max_MN) ? 0 : load_target[track0 + stride_mn * 1],\n                (mn_load_offset + 2 >= max_MN) ? 0 : load_target[track0 + stride_mn * 2],\n                (mn_load_offset + 3 >= max_MN) ? 0 : load_target[track0 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 2] = float4(\n                (mn_load_offset + 0 >= max_MN) ? 0 : load_target[track2 + stride_mn * 0],\n                (mn_load_offset + 1 >= max_MN) ? 0 : load_target[track2 + stride_mn * 1],\n                (mn_load_offset + 2 >= max_MN) ? 0 : load_target[track2 + stride_mn * 2],\n                (mn_load_offset + 3 >= max_MN) ? 0 : load_target[track2 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 4] = float4(\n                (mn_load_offset + 0 >= max_MN) ? 0 : load_target[track4 + stride_mn * 0],\n                (mn_load_offset + 1 >= max_MN) ? 0 : load_target[track4 + stride_mn * 1],\n                (mn_load_offset + 2 >= max_MN) ? 0 : load_target[track4 + stride_mn * 2],\n                (mn_load_offset + 3 >= max_MN) ? 0 : load_target[track4 + stride_mn * 3]\n            ); \n            shared4[shared_offset4 + 32 * 6] = float4(\n                (mn_load_offset + 0 >= max_MN) ? 0 : load_target[track6 + stride_mn * 0],\n                (mn_load_offset + 1 >= max_MN) ? 0 : load_target[track6 + stride_mn * 1],\n                (mn_load_offset + 2 >= max_MN) ? 0 : load_target[track6 + stride_mn * 2],\n                (mn_load_offset + 3 >= max_MN) ? 0 : load_target[track6 + stride_mn * 3]\n            ); \n    #endif\n\n            k += 8;\n#else\n    #if OPTIMIZE && M_DIVIDABLE_BY_64 && N_DIVIDABLE_BY_64\n            shared4[shared_offset4 + 32 * 0] = float4(\n                (k + k_load_offset >= K) ? 0 : load_target[track0 + stride_mn * 0],\n                (k + k_load_offset >= K) ? 0 : load_target[track0 + stride_mn * 1],\n                (k + k_load_offset >= K) ? 0 : load_target[track0 + stride_mn * 2],\n                (k + k_load_offset >= K) ? 0 : load_target[track0 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 2] = float4(\n                (k + k_load_offset >= K) ? 0 : load_target[track2 + stride_mn * 0],\n                (k + k_load_offset >= K) ? 0 : load_target[track2 + stride_mn * 1],\n                (k + k_load_offset >= K) ? 0 : load_target[track2 + stride_mn * 2],\n                (k + k_load_offset >= K) ? 0 : load_target[track2 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 4] = float4(\n                (k + k_load_offset >= K) ? 0 : load_target[track4 + stride_mn * 0],\n                (k + k_load_offset >= K) ? 0 : load_target[track4 + stride_mn * 1],\n                (k + k_load_offset >= K) ? 0 : load_target[track4 + stride_mn * 2],\n                (k + k_load_offset >= K) ? 0 : load_target[track4 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 6] = float4(\n                (k + k_load_offset >= K) ? 0 : load_target[track6 + stride_mn * 0],\n                (k + k_load_offset >= K) ? 0 : load_target[track6 + stride_mn * 1],\n                (k + k_load_offset >= K) ? 0 : load_target[track6 + stride_mn * 2],\n                (k + k_load_offset >= K) ? 0 : load_target[track6 + stride_mn * 3]\n            ); \n            k += 2;\n    #else\n            shared4[shared_offset4 + 32 * 0] = float4(\n                (k + k_load_offset >= K || mn_load_offset + 0 >= max_MN) ? 0 : load_target[track0 + stride_mn * 0],\n                (k + k_load_offset >= K || mn_load_offset + 1 >= max_MN) ? 0 : load_target[track0 + stride_mn * 1],\n                (k + k_load_offset >= K || mn_load_offset + 2 >= max_MN) ? 0 : load_target[track0 + stride_mn * 2],\n                (k + k_load_offset >= K || mn_load_offset + 3 >= max_MN) ? 0 : load_target[track0 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 2] = float4(\n                (k + k_load_offset >= K || mn_load_offset + 0 >= max_MN) ? 0 : load_target[track2 + stride_mn * 0],\n                (k + k_load_offset >= K || mn_load_offset + 1 >= max_MN) ? 0 : load_target[track2 + stride_mn * 1],\n                (k + k_load_offset >= K || mn_load_offset + 2 >= max_MN) ? 0 : load_target[track2 + stride_mn * 2],\n                (k + k_load_offset >= K || mn_load_offset + 3 >= max_MN) ? 0 : load_target[track2 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 4] = float4(\n                (k + k_load_offset >= K || mn_load_offset + 0 >= max_MN) ? 0 : load_target[track4 + stride_mn * 0],\n                (k + k_load_offset >= K || mn_load_offset + 1 >= max_MN) ? 0 : load_target[track4 + stride_mn * 1],\n                (k + k_load_offset >= K || mn_load_offset + 2 >= max_MN) ? 0 : load_target[track4 + stride_mn * 2],\n                (k + k_load_offset >= K || mn_load_offset + 3 >= max_MN) ? 0 : load_target[track4 + stride_mn * 3]\n            ); \n            k += 2;\n\n            shared4[shared_offset4 + 32 * 6] = float4(\n                (k + k_load_offset >= K || mn_load_offset + 0 >= max_MN) ? 0 : load_target[track6 + stride_mn * 0],\n                (k + k_load_offset >= K || mn_load_offset + 1 >= max_MN) ? 0 : load_target[track6 + stride_mn * 1],\n                (k + k_load_offset >= K || mn_load_offset + 2 >= max_MN) ? 0 : load_target[track6 + stride_mn * 2],\n                (k + k_load_offset >= K || mn_load_offset + 3 >= max_MN) ? 0 : load_target[track6 + stride_mn * 3]\n            ); \n            k += 2;\n    #endif\n#endif\n        }\n\n        threadgroup_barrier(mem_flags::mem_threadgroup);\n\n        {\n            for (int k_sub = 0; k_sub < 8; k_sub++)\n            {\n                float4 a00 = shared4[32 * k_sub + read_A_offset4 + 0];\n                float4 a01 = shared4[32 * k_sub + read_A_offset4 + 1];\n                float4 b00 = shared4[32 * k_sub + read_B_offset4 + 0];\n                float4 b01 = shared4[32 * k_sub + read_B_offset4 + 1];\n\n                result[4][0]  += b00[0] * a00[2];\n                result[4][1]  += b00[1] * a00[2];\n                result[0][1]  += b00[1] * a00[0];\n                result[0][0]  += b00[0] * a00[0];\n                result[6][0]  += b00[0] * a00[3];\n                result[6][1]  += b00[1] * a00[3];\n                result[2][1]  += b00[1] * a00[1];\n                result[2][0]  += b00[0] * a00[1];\n                result[12][0] += b00[0] * a01[2];\n                result[12][1] += b00[1] * a01[2];\n                result[8][1]  += b00[1] * a01[0];\n                result[8][0]  += b00[0] * a01[0];\n                result[14][0] += b00[0] * a01[3];\n                result[14][1] += b00[1] * a01[3];\n                result[10][1] += b00[1] * a01[1];\n                result[10][0] += b00[0] * a01[1];\n\n                result[14][2] += b00[2] * a01[3];\n                result[14][3] += b00[3] * a01[3];\n                result[10][3] += b00[3] * a01[1];\n                result[10][2] += b00[2] * a01[1];\n                result[12][2] += b00[2] * a01[2];\n                result[12][3] += b00[3] * a01[2];\n                result[8][3]  += b00[3] * a01[0];\n                result[8][2]  += b00[2] * a01[0];\n                result[6][2]  += b00[2] * a00[3];\n                result[6][3]  += b00[3] * a00[3];\n                result[2][3]  += b00[3] * a00[1];\n                result[2][2]  += b00[2] * a00[1];\n                result[4][2]  += b00[2] * a00[2];\n                result[4][3]  += b00[3] * a00[2];\n                result[0][3]  += b00[3] * a00[0];\n                result[0][2]  += b00[2] * a00[0];\n\n                result[5][0]  += b01[0] * a00[2];\n                result[5][1]  += b01[1] * a00[2];\n                result[1][1]  += b01[1] * a00[0];\n                result[1][0]  += b01[0] * a00[0];\n                result[7][0]  += b01[0] * a00[3];\n                result[7][1]  += b01[1] * a00[3];\n                result[3][1]  += b01[1] * a00[1];\n                result[3][0]  += b01[0] * a00[1];\n                result[13][0] += b01[0] * a01[2];\n                result[13][1] += b01[1] * a01[2];\n                result[9][1]  += b01[1] * a01[0];\n                result[9][0]  += b01[0] * a01[0];\n                result[15][0] += b01[0] * a01[3];\n                result[15][1] += b01[1] * a01[3];\n                result[11][1] += b01[1] * a01[1];\n                result[11][0] += b01[0] * a01[1];\n\n                result[15][2] += b01[2] * a01[3];\n                result[15][3] += b01[3] * a01[3];\n                result[11][3] += b01[3] * a01[1];\n                result[11][2] += b01[2] * a01[1];\n                result[13][2] += b01[2] * a01[2];\n                result[13][3] += b01[3] * a01[2];\n                result[9][3]  += b01[3] * a01[0];\n                result[9][2]  += b01[2] * a01[0];\n                result[7][2]  += b01[2] * a00[3];\n                result[7][3]  += b01[3] * a00[3];\n                result[3][3]  += b01[3] * a00[1];\n                result[3][2]  += b01[2] * a00[1];\n                result[5][2]  += b01[2] * a00[2];\n                result[5][3]  += b01[3] * a00[2];\n                result[1][3]  += b01[3] * a00[0];\n                result[1][2]  += b01[2] * a00[0];\n            }\n        }\n\n        shared_offset4 ^= 32 * 8;\n        read_A_offset4 ^= 32 * 8;\n        read_B_offset4 ^= 32 * 8;\n        track0 += stride_k * 8;\n        track2 += stride_k * 8;\n        track4 += stride_k * 8;\n        track6 += stride_k * 8;\n    }\n\n    {\n    \n#if OPTIMIZE && N_DIVIDABLE_BY_64\n    #if WITH_BIAS\n        float4 b[2];\n        const device float4 *bias4 = (const device float4 *)(meta_buffer[3]);\n        b[0] = bias4[group_position.y * 16 + n_offset * 2 + 0];\n        b[1] = bias4[group_position.y * 16 + n_offset * 2 + 1];\n    #endif\n    \n        device float4 *C4 = (device float4 *)((static_buffer + meta_buffer[2]));\n        const int N4 = N >> 2;\n        int m = group_position.x * 64 + m_offset * 8;\n        for (int m_sub = 0; m_sub < 8; m_sub++)\n        {\n\n    #if !M_DIVIDABLE_BY_64\n            if (m >= M) continue;\n    #endif\n\n            const int n = group_position.y * 16 + n_offset * 2;\n            float4 result0 = result[m_sub * 2 + 0];\n            float4 result1 = result[m_sub * 2 + 1];\n\n    #if WITH_BIAS\n            result0 += b[0];\n            result1 += b[1];\n    #endif\n\n    #if HAS_INLINE\n            result0[0] = result0[0];\n            result0[1] = result0[1];\n            result0[2] = result0[2];\n            result0[3] = result0[3];\n            result1[0] = result1[0];\n            result1[1] = result1[1];\n            result1[2] = result1[2];\n            result1[3] = result1[3];\n    #endif\n\n            C4[m * N4 + n + 0] = result0;\n            C4[m * N4 + n + 1] = result1;\n            \n            m++;\n        }\n#else\n    #if WITH_BIAS\n        const device float *bias = meta_buffer[3];\n        float b[8];\n        for (int n_sub = 0; n_sub < 8; n_sub++)\n        {\n            b[n_sub] = (group_position.y * 64 + n_offset * 8 + n_sub < N)\n                ? bias[group_position.y * 64 + n_offset * 8 + n_sub]\n                : 0;\n        }\n    #endif\n\n        device float *C = (static_buffer + meta_buffer[2]);\n        int m = group_position.x * 64 + m_offset * 8;\n        for (int m_sub = 0; m_sub < 8; m_sub++)\n        {\n            int n = group_position.y * 64 + n_offset * 8;\n\n            for (int n_sub1 = 0; n_sub1 < 2; n_sub1++)\n            {\n                for (int n_sub2 = 0; n_sub2 < 4; n_sub2++)\n                {\n\n    #if WITH_BIAS\n        #if OPTIMIZE && M_DIVIDABLE_BY_64\n                    (         n < N) ? (C[m * N + n] = result[m_sub * 2 + n_sub1][n_sub2] + b[n_sub1*4+n_sub2]) : 0;\n        #else\n                    (m < M && n < N) ? (C[m * N + n] = result[m_sub * 2 + n_sub1][n_sub2] + b[n_sub1*4+n_sub2]) : 0;\n        #endif\n    #else\n        #if OPTIMIZE && M_DIVIDABLE_BY_64\n                    (         n < N) ? (C[m * N + n] = result[m_sub * 2 + n_sub1][n_sub2]) : 0;\n        #else\n                    (m < M && n < N) ? (C[m * N + n] = result[m_sub * 2 + n_sub1][n_sub2]) : 0;\n        #endif\n    #endif\n                    n++;\n                }\n            }\n            \n            m++;\n        }\n#endif\n\n    }\n\n\n#undef M_DIVIDABLE_BY_64\n#undef N_DIVIDABLE_BY_64\n#undef K_DIVIDABLE_BY_8\n#undef TRANSPOSE_A\n#undef TRANSPOSE_B\n#undef A_STRIDE_K\n#undef B_STRIDE_K\n#undef A_STRIDE_M\n#undef A_STRIDE_M\n#undef WITH_BIAS\n#undef HAS_INLINE\n}\n\n\nkernel void tanh_a15c2d4804f4cee1f3ede3eea3544c8f0db5e356f1ac5003c203a613(device float * static_buffer[[buffer(0)]],\n                          device float * dynamic_buffer[[buffer(1)]],\n                          const device int * meta_buffer [[buffer(2)]],\n                          uint index[[thread_position_in_grid]],\n                          uint num_threads[[threads_per_grid]])\n{\n    device float *Y = (static_buffer + meta_buffer[0]);\n    const int N = meta_buffer[2];\n\nfloat y;\nfloat x0;\nconst device float *X0 = (meta_buffer[3+1+ (0)] ? static_buffer : dynamic_buffer) + meta_buffer[3 + (0)];\n    \n    for (int i = index; i < N; i+= num_threads)\n    {\n\n\n\nx0 = X0[i];\n\n        {\ny = tanh(x0);\n        }\n\n        Y[i] = y;\n    }\n}\n",
  "exec_infos": [
    {
      "entry_func_name": "sgemm_2d6178c49069e0de0b36cbea5fff9b0fe887c9ef8f5e6f0793dd67eb",
      "threadgroups_per_grid": {
        "width": 1,
        "height": 256,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        4,
        222,
        58,
        0,
        0,
        0,
        0,
        0,
        172,
        222,
        58,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        166,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_6d3cc625dff5cb7118e081c9e962a21a90eec1e99a563ed4c4102b8d",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        208,
        57,
        0,
        172,
        30,
        59,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_8c8d07a21f8ee3baa3bf2e75ba2477be96db8265f45a16350532a8cc",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        16,
        58,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_6d3cc625dff5cb7118e081c9e962a21a90eec1e99a563ed4c4102b8d",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        80,
        58,
        0,
        172,
        30,
        59,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "relu_25832aa5796e7a508104453f16f73bd8877ea4d72763523055815ecb",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        2,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        30,
        59,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "reshape_16bccba9a464498806aabf37d42e7f652af6d3922196b61ef1ee5108",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 1024,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        64,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "transpose_f2a777777e3fcf71c57cc96369c299008f7e5794ffc98daa66ce2d55",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        30,
        59,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        172,
        30,
        59,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        32,
        56,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        0,
        213,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        64,
        208,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        59,
        0,
        192,
        216,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        30,
        59,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        176,
        56,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        0,
        209,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        192,
        218,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        216,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        94,
        59,
        0,
        172,
        30,
        61,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        172,
        30,
        59,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        16,
        51,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        64,
        213,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        128,
        217,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        59,
        0,
        64,
        220,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        30,
        59,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        208,
        48,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        64,
        211,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        192,
        214,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        210,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        94,
        59,
        0,
        172,
        30,
        61,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        172,
        30,
        59,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        112,
        54,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        0,
        218,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        192,
        220,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        59,
        0,
        128,
        216,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        30,
        59,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        192,
        52,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        192,
        212,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        64,
        214,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        64,
        215,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        94,
        59,
        0,
        172,
        30,
        61,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        172,
        30,
        59,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        128,
        50,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        64,
        212,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        217,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        59,
        0,
        192,
        219,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        30,
        59,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        64,
        48,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        0,
        211,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        214,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        128,
        209,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        94,
        59,
        0,
        172,
        30,
        61,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        172,
        30,
        59,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        0,
        55,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        128,
        215,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        64,
        210,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        59,
        0,
        128,
        208,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        30,
        59,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        48,
        52,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        128,
        214,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        64,
        218,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        221,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        94,
        59,
        0,
        172,
        30,
        61,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        172,
        30,
        59,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        240,
        49,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        192,
        211,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        192,
        215,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        59,
        0,
        128,
        210,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        30,
        59,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        144,
        55,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        0,
        219,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        128,
        221,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        192,
        208,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        94,
        59,
        0,
        172,
        30,
        61,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        172,
        30,
        59,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        224,
        53,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        64,
        216,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        128,
        219,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        59,
        0,
        192,
        221,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        30,
        59,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        160,
        51,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        128,
        213,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        64,
        209,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        212,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        94,
        59,
        0,
        172,
        30,
        61,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        172,
        30,
        59,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        96,
        49,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        128,
        211,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        215,
        58,
        0,
        172,
        94,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        59,
        0,
        64,
        219,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        30,
        59,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        64,
        57,
        0,
        172,
        94,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        128,
        218,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        64,
        221,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        0,
        208,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "elementwiseadd_8e730fced7e44535d84f6f69b7a1d08bcfe010888d0c5baa24d9f612",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        222,
        58,
        0,
        172,
        30,
        61,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        94,
        61,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        80,
        53,
        0,
        172,
        30,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        192,
        207,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        192,
        210,
        58,
        0,
        172,
        30,
        59,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        59,
        0,
        192,
        213,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "relu_25832aa5796e7a508104453f16f73bd8877ea4d72763523055815ecb",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        4,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 324,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 4,
        "height": 4,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        0,
        46,
        0,
        172,
        30,
        61,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        30,
        61,
        0,
        192,
        206,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "depth2space_80400f914882037720ae1b1a8c35fd1640e44514f2d25ba012fd9f6f",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        172,
        222,
        59,
        0,
        2,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        32,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        32,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        59,
        0,
        192,
        209,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        128,
        212,
        58,
        0,
        172,
        222,
        59,
        0,
        0,
        4,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "relu_25832aa5796e7a508104453f16f73bd8877ea4d72763523055815ecb",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        4,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        172,
        222,
        59,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        8,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        32,
        0,
        0,
        0,
        32,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 1156,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        172,
        222,
        62,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        32,
        0,
        0,
        0,
        32,
        0,
        0,
        0,
        32,
        0,
        0,
        0,
        32,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 16,
        "height": 4,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        62,
        0,
        0,
        192,
        43,
        0,
        172,
        222,
        58,
        0,
        0,
        0,
        0,
        0,
        0,
        4,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        192,
        205,
        58,
        0,
        172,
        222,
        62,
        0,
        0,
        4,
        0,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "depth2space_80400f914882037720ae1b1a8c35fd1640e44514f2d25ba012fd9f6f",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        62,
        0,
        172,
        222,
        58,
        0,
        2,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        32,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        32,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        192,
        217,
        58,
        0,
        172,
        222,
        62,
        0,
        0,
        16,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        62,
        0,
        128,
        220,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        16,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "relu_25832aa5796e7a508104453f16f73bd8877ea4d72763523055815ecb",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        94,
        0,
        4,
        0,
        0,
        0,
        0,
        0,
        4,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        4,
        0,
        0,
        16,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 4356,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        94,
        0,
        172,
        222,
        58,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_649eda446844555d172985a7d7a814eba4ed3d5c75070d32e4814b9b",
      "threadgroups_per_grid": {
        "width": 64,
        "height": 4,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        128,
        41,
        0,
        172,
        222,
        94,
        0,
        0,
        0,
        0,
        0,
        0,
        16,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        2,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        94,
        0,
        192,
        204,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        16,
        0,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "depth2space_80400f914882037720ae1b1a8c35fd1640e44514f2d25ba012fd9f6f",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        172,
        222,
        74,
        0,
        2,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        64,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        128,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        128,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisescale_792e13cddf971834e787544e0d84c2448978dd60a6673c6529b2e244",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        74,
        0,
        64,
        217,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        64,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        220,
        58,
        0,
        172,
        222,
        74,
        0,
        0,
        64,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "relu_25832aa5796e7a508104453f16f73bd8877ea4d72763523055815ecb",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        4,
        0,
        0,
        0,
        0,
        0,
        16,
        0,
        172,
        222,
        74,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        16,
        0,
        0,
        32,
        0,
        0,
        64,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        128,
        0,
        0,
        0,
        128,
        0,
        0,
        0,
        64,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "im2col_711d08041d54e4cbe1f47c1da37b893c63805224f746933c94d27ae3",
      "threadgroups_per_grid": {
        "width": 18496,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        172,
        222,
        74,
        0,
        1,
        0,
        0,
        0,
        64,
        0,
        0,
        0,
        128,
        0,
        0,
        0,
        128,
        0,
        0,
        0,
        128,
        0,
        0,
        0,
        128,
        0,
        0,
        0,
        9,
        0,
        0,
        0,
        9,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        4,
        0,
        0,
        0,
        4,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "sgemm_7a3a0cf4aa302a78f1757c63ffa9c6babc403b5113aa3e74d7345e93",
      "threadgroups_per_grid": {
        "width": 256,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": 64,
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        74,
        0,
        0,
        144,
        58,
        0,
        172,
        222,
        58,
        0,
        0,
        0,
        0,
        0,
        0,
        64,
        0,
        0,
        3,
        0,
        0,
        0,
        64,
        20,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "axiswisebias_748ce2d11cbb19930add77db93364514f3f7dd33b59c293fb2bbb268",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        0,
        222,
        58,
        0,
        172,
        158,
        59,
        0,
        0,
        64,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    },
    {
      "entry_func_name": "tanh_a15c2d4804f4cee1f3ede3eea3544c8f0db5e356f1ac5003c203a613",
      "threadgroups_per_grid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threads_per_thread_group": {
        "width": {
          "eval": "placeholders['__MAX_THREADS_PER_THREADGROUP__'];"
        },
        "height": 1,
        "depth": 1
      },
      "meta_buffer": [
        172,
        222,
        58,
        0,
        4,
        0,
        0,
        0,
        0,
        192,
        0,
        0,
        172,
        158,
        59,
        0,
        1,
        0,
        0,
        0,
        0,
        192,
        0,
        0,
        128,
        1,
        0,
        0,
        3,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        128,
        0,
        0,
        0,
        128,
        0,
        0,
        0,
        3,
        0,
        0,
        0
      ],
      "unresolved_value_list": []
    }
  ],
  "weight_encoding": "raw",
  "memory_layout": {
    "static": {
      "size": 89841324,
      "allocations": {
        "v188": {
          "name": "v188",
          "offset": 0,
          "size": 2719744
        },
        "v135": {
          "name": "v135",
          "offset": 2719744,
          "size": 147456
        },
        "v144": {
          "name": "v144",
          "offset": 2867200,
          "size": 147456
        },
        "v155": {
          "name": "v155",
          "offset": 3014656,
          "size": 147456
        },
        "v2": {
          "name": "v2",
          "offset": 3162112,
          "size": 36864
        },
        "v8": {
          "name": "v8",
          "offset": 3198976,
          "size": 36864
        },
        "v17": {
          "name": "v17",
          "offset": 3235840,
          "size": 36864
        },
        "v21": {
          "name": "v21",
          "offset": 3272704,
          "size": 36864
        },
        "v32": {
          "name": "v32",
          "offset": 3309568,
          "size": 36864
        },
        "v43": {
          "name": "v43",
          "offset": 3346432,
          "size": 36864
        },
        "v44": {
          "name": "v44",
          "offset": 3383296,
          "size": 36864
        },
        "v55": {
          "name": "v55",
          "offset": 3420160,
          "size": 36864
        },
        "v67": {
          "name": "v67",
          "offset": 3457024,
          "size": 36864
        },
        "v72": {
          "name": "v72",
          "offset": 3493888,
          "size": 36864
        },
        "v77": {
          "name": "v77",
          "offset": 3530752,
          "size": 36864
        },
        "v98": {
          "name": "v98",
          "offset": 3567616,
          "size": 36864
        },
        "v101": {
          "name": "v101",
          "offset": 3604480,
          "size": 36864
        },
        "v109": {
          "name": "v109",
          "offset": 3641344,
          "size": 36864
        },
        "v169": {
          "name": "v169",
          "offset": 3678208,
          "size": 36864
        },
        "v193": {
          "name": "v193",
          "offset": 3715072,
          "size": 36864
        },
        "v206": {
          "name": "v206",
          "offset": 3751936,
          "size": 36864
        },
        "v73": {
          "name": "v73",
          "offset": 3788800,
          "size": 16384
        },
        "v158": {
          "name": "v158",
          "offset": 3805184,
          "size": 16384
        },
        "v198": {
          "name": "v198",
          "offset": 3821568,
          "size": 16384
        },
        "v122": {
          "name": "v122",
          "offset": 3837952,
          "size": 15552
        },
        "v174": {
          "name": "v174",
          "offset": 3853504,
          "size": 256
        },
        "v181": {
          "name": "v181",
          "offset": 3853760,
          "size": 256
        },
        "v192": {
          "name": "v192",
          "offset": 3854016,
          "size": 256
        },
        "v0": {
          "name": "v0",
          "offset": 3854272,
          "size": 64
        },
        "v6": {
          "name": "v6",
          "offset": 3854336,
          "size": 64
        },
        "v7": {
          "name": "v7",
          "offset": 3854400,
          "size": 64
        },
        "v12": {
          "name": "v12",
          "offset": 3854464,
          "size": 64
        },
        "v16": {
          "name": "v16",
          "offset": 3854528,
          "size": 64
        },
        "v20": {
          "name": "v20",
          "offset": 3854592,
          "size": 64
        },
        "v22": {
          "name": "v22",
          "offset": 3854656,
          "size": 64
        },
        "v26": {
          "name": "v26",
          "offset": 3854720,
          "size": 64
        },
        "v34": {
          "name": "v34",
          "offset": 3854784,
          "size": 64
        },
        "v35": {
          "name": "v35",
          "offset": 3854848,
          "size": 64
        },
        "v36": {
          "name": "v36",
          "offset": 3854912,
          "size": 64
        },
        "v45": {
          "name": "v45",
          "offset": 3854976,
          "size": 64
        },
        "v47": {
          "name": "v47",
          "offset": 3855040,
          "size": 64
        },
        "v51": {
          "name": "v51",
          "offset": 3855104,
          "size": 64
        },
        "v60": {
          "name": "v60",
          "offset": 3855168,
          "size": 64
        },
        "v63": {
          "name": "v63",
          "offset": 3855232,
          "size": 64
        },
        "v69": {
          "name": "v69",
          "offset": 3855296,
          "size": 64
        },
        "v75": {
          "name": "v75",
          "offset": 3855360,
          "size": 64
        },
        "v81": {
          "name": "v81",
          "offset": 3855424,
          "size": 64
        },
        "v83": {
          "name": "v83",
          "offset": 3855488,
          "size": 64
        },
        "v85": {
          "name": "v85",
          "offset": 3855552,
          "size": 64
        },
        "v89": {
          "name": "v89",
          "offset": 3855616,
          "size": 64
        },
        "v90": {
          "name": "v90",
          "offset": 3855680,
          "size": 64
        },
        "v93": {
          "name": "v93",
          "offset": 3855744,
          "size": 64
        },
        "v94": {
          "name": "v94",
          "offset": 3855808,
          "size": 64
        },
        "v96": {
          "name": "v96",
          "offset": 3855872,
          "size": 64
        },
        "v99": {
          "name": "v99",
          "offset": 3855936,
          "size": 64
        },
        "v100": {
          "name": "v100",
          "offset": 3856000,
          "size": 64
        },
        "v107": {
          "name": "v107",
          "offset": 3856064,
          "size": 64
        },
        "v111": {
          "name": "v111",
          "offset": 3856128,
          "size": 64
        },
        "v117": {
          "name": "v117",
          "offset": 3856192,
          "size": 64
        },
        "v119": {
          "name": "v119",
          "offset": 3856256,
          "size": 64
        },
        "v120": {
          "name": "v120",
          "offset": 3856320,
          "size": 64
        },
        "v121": {
          "name": "v121",
          "offset": 3856384,
          "size": 64
        },
        "v124": {
          "name": "v124",
          "offset": 3856448,
          "size": 64
        },
        "v125": {
          "name": "v125",
          "offset": 3856512,
          "size": 64
        },
        "v128": {
          "name": "v128",
          "offset": 3856576,
          "size": 64
        },
        "v131": {
          "name": "v131",
          "offset": 3856640,
          "size": 64
        },
        "v134": {
          "name": "v134",
          "offset": 3856704,
          "size": 64
        },
        "v138": {
          "name": "v138",
          "offset": 3856768,
          "size": 64
        },
        "v142": {
          "name": "v142",
          "offset": 3856832,
          "size": 64
        },
        "v146": {
          "name": "v146",
          "offset": 3856896,
          "size": 64
        },
        "v147": {
          "name": "v147",
          "offset": 3856960,
          "size": 64
        },
        "v148": {
          "name": "v148",
          "offset": 3857024,
          "size": 64
        },
        "v150": {
          "name": "v150",
          "offset": 3857088,
          "size": 64
        },
        "v153": {
          "name": "v153",
          "offset": 3857152,
          "size": 64
        },
        "v154": {
          "name": "v154",
          "offset": 3857216,
          "size": 64
        },
        "v166": {
          "name": "v166",
          "offset": 3857280,
          "size": 64
        },
        "v172": {
          "name": "v172",
          "offset": 3857344,
          "size": 64
        },
        "v173": {
          "name": "v173",
          "offset": 3857408,
          "size": 64
        },
        "v176": {
          "name": "v176",
          "offset": 3857472,
          "size": 64
        },
        "v178": {
          "name": "v178",
          "offset": 3857536,
          "size": 64
        },
        "v183": {
          "name": "v183",
          "offset": 3857600,
          "size": 64
        },
        "v184": {
          "name": "v184",
          "offset": 3857664,
          "size": 64
        },
        "v185": {
          "name": "v185",
          "offset": 3857728,
          "size": 64
        },
        "v191": {
          "name": "v191",
          "offset": 3857792,
          "size": 64
        },
        "v208": {
          "name": "v208",
          "offset": 3857856,
          "size": 64
        },
        "v165": {
          "name": "v165",
          "offset": 3857920,
          "size": 3
        },
        "v79": {
          "name": "v79",
          "offset": 3857924,
          "size": 166
        },
        "v41": {
          "name": "v41",
          "offset": 3858092,
          "size": 16384
        },
        "v207": {
          "name": "v207",
          "offset": 3858092,
          "size": 16384
        },
        "v80": {
          "name": "v80",
          "offset": 3858092,
          "size": 16384
        },
        "v9": {
          "name": "v9",
          "offset": 3858092,
          "size": 16384
        },
        "v71": {
          "name": "v71",
          "offset": 3858092,
          "size": 16384
        },
        "v1": {
          "name": "v1",
          "offset": 3858092,
          "size": 16384
        },
        "v56": {
          "name": "v56",
          "offset": 3858092,
          "size": 16384
        },
        "v114": {
          "name": "v114",
          "offset": 3858092,
          "size": 16384
        },
        "v70": {
          "name": "v70",
          "offset": 3858092,
          "size": 16384
        },
        "v171": {
          "name": "v171",
          "offset": 3858092,
          "size": 16384
        },
        "v11": {
          "name": "v11",
          "offset": 3858092,
          "size": 16384
        },
        "v103": {
          "name": "v103",
          "offset": 3858092,
          "size": 147456
        },
        "v214": {
          "name": "v214",
          "offset": 3858092,
          "size": 16384
        },
        "v213": {
          "name": "v213",
          "offset": 3858092,
          "size": 147456
        },
        "v76": {
          "name": "v76",
          "offset": 3858092,
          "size": 16384
        },
        "v129": {
          "name": "v129",
          "offset": 3858092,
          "size": 147456
        },
        "v15": {
          "name": "v15",
          "offset": 3858092,
          "size": 16384
        },
        "v108": {
          "name": "v108",
          "offset": 3858092,
          "size": 147456
        },
        "v66": {
          "name": "v66",
          "offset": 3858092,
          "size": 16384
        },
        "v13": {
          "name": "v13",
          "offset": 3858092,
          "size": 147456
        },
        "v118": {
          "name": "v118",
          "offset": 3858092,
          "size": 16384
        },
        "v113": {
          "name": "v113",
          "offset": 3858092,
          "size": 147456
        },
        "v164": {
          "name": "v164",
          "offset": 3858092,
          "size": 16384
        },
        "v31": {
          "name": "v31",
          "offset": 3858092,
          "size": 147456
        },
        "v110": {
          "name": "v110",
          "offset": 3858092,
          "size": 16384
        },
        "v217": {
          "name": "v217",
          "offset": 3858092,
          "size": 147456
        },
        "v161": {
          "name": "v161",
          "offset": 3858092,
          "size": 16384
        },
        "v23": {
          "name": "v23",
          "offset": 3858092,
          "size": 16384
        },
        "v104": {
          "name": "v104",
          "offset": 3858092,
          "size": 147456
        },
        "v19": {
          "name": "v19",
          "offset": 3858092,
          "size": 16384
        },
        "v112": {
          "name": "v112",
          "offset": 3858092,
          "size": 16384
        },
        "v151": {
          "name": "v151",
          "offset": 3858092,
          "size": 147456
        },
        "v209": {
          "name": "v209",
          "offset": 3858092,
          "size": 65536
        },
        "v53": {
          "name": "v53",
          "offset": 3858092,
          "size": 65536
        },
        "v127": {
          "name": "v127",
          "offset": 3858092,
          "size": 65536
        },
        "v157": {
          "name": "v157",
          "offset": 3858092,
          "size": 262144
        },
        "v216": {
          "name": "v216",
          "offset": 3858092,
          "size": 262144
        },
        "v194": {
          "name": "v194",
          "offset": 3858092,
          "size": 262144
        },
        "v105": {
          "name": "v105",
          "offset": 3858092,
          "size": 2359296
        },
        "v186": {
          "name": "v186",
          "offset": 3858092,
          "size": 1048576
        },
        "v145": {
          "name": "v145",
          "offset": 3858092,
          "size": 1048576
        },
        "v211": {
          "name": "v211",
          "offset": 3858092,
          "size": 1048576
        },
        "v137": {
          "name": "v137",
          "offset": 3858092,
          "size": 49152
        },
        "v202": {
          "name": "v202",
          "offset": 3858092,
          "size": 49152
        },
        "v132": {
          "name": "v132",
          "offset": 3874476,
          "size": 16384
        },
        "v212": {
          "name": "v212",
          "offset": 3874476,
          "size": 16384
        },
        "v195": {
          "name": "v195",
          "offset": 3874476,
          "size": 16384
        },
        "v74": {
          "name": "v74",
          "offset": 3874476,
          "size": 147456
        },
        "v102": {
          "name": "v102",
          "offset": 3874476,
          "size": 16384
        },
        "v133": {
          "name": "v133",
          "offset": 3874476,
          "size": 16384
        },
        "v65": {
          "name": "v65",
          "offset": 3874476,
          "size": 16384
        },
        "v39": {
          "name": "v39",
          "offset": 3874476,
          "size": 147456
        },
        "v106": {
          "name": "v106",
          "offset": 3874476,
          "size": 16384
        },
        "v190": {
          "name": "v190",
          "offset": 3874476,
          "size": 16384
        },
        "v4": {
          "name": "v4",
          "offset": 3874476,
          "size": 16384
        },
        "v14": {
          "name": "v14",
          "offset": 3874476,
          "size": 147456
        },
        "v159": {
          "name": "v159",
          "offset": 3874476,
          "size": 16384
        },
        "v139": {
          "name": "v139",
          "offset": 3874476,
          "size": 16384
        },
        "v210": {
          "name": "v210",
          "offset": 3874476,
          "size": 16384
        },
        "v189": {
          "name": "v189",
          "offset": 3874476,
          "size": 147456
        },
        "v95": {
          "name": "v95",
          "offset": 3874476,
          "size": 16384
        },
        "v180": {
          "name": "v180",
          "offset": 3874476,
          "size": 16384
        },
        "v115": {
          "name": "v115",
          "offset": 3874476,
          "size": 16384
        },
        "v141": {
          "name": "v141",
          "offset": 3874476,
          "size": 147456
        },
        "v52": {
          "name": "v52",
          "offset": 3874476,
          "size": 16384
        },
        "v92": {
          "name": "v92",
          "offset": 3874476,
          "size": 16384
        },
        "v160": {
          "name": "v160",
          "offset": 3874476,
          "size": 16384
        },
        "v40": {
          "name": "v40",
          "offset": 3874476,
          "size": 147456
        },
        "v84": {
          "name": "v84",
          "offset": 3874476,
          "size": 16384
        },
        "v61": {
          "name": "v61",
          "offset": 3874476,
          "size": 16384
        },
        "v205": {
          "name": "v205",
          "offset": 3874476,
          "size": 16384
        },
        "v196": {
          "name": "v196",
          "offset": 3874476,
          "size": 147456
        },
        "v140": {
          "name": "v140",
          "offset": 3874476,
          "size": 16384
        },
        "v220": {
          "name": "v220",
          "offset": 3874476,
          "size": 16384
        },
        "v37": {
          "name": "v37",
          "offset": 3874476,
          "size": 16384
        },
        "v58": {
          "name": "v58",
          "offset": 3874476,
          "size": 147456
        },
        "v78": {
          "name": "v78",
          "offset": 3874476,
          "size": 16384
        },
        "v167": {
          "name": "v167",
          "offset": 3874476,
          "size": 16384
        },
        "v201": {
          "name": "v201",
          "offset": 3874476,
          "size": 16384
        },
        "v64": {
          "name": "v64",
          "offset": 3874476,
          "size": 16384
        },
        "v38": {
          "name": "v38",
          "offset": 3890860,
          "size": 16384
        },
        "v130": {
          "name": "v130",
          "offset": 3890860,
          "size": 16384
        },
        "v152": {
          "name": "v152",
          "offset": 3890860,
          "size": 16384
        },
        "v54": {
          "name": "v54",
          "offset": 3890860,
          "size": 16384
        },
        "v199": {
          "name": "v199",
          "offset": 3890860,
          "size": 16384
        },
        "v179": {
          "name": "v179",
          "offset": 3890860,
          "size": 16384
        },
        "v143": {
          "name": "v143",
          "offset": 3890860,
          "size": 16384
        },
        "v42": {
          "name": "v42",
          "offset": 3890860,
          "size": 16384
        },
        "v5": {
          "name": "v5",
          "offset": 3890860,
          "size": 16384
        },
        "v200": {
          "name": "v200",
          "offset": 3890860,
          "size": 16384
        },
        "v10": {
          "name": "v10",
          "offset": 3890860,
          "size": 16384
        },
        "v27": {
          "name": "v27",
          "offset": 3890860,
          "size": 16384
        },
        "v177": {
          "name": "v177",
          "offset": 3890860,
          "size": 16384
        },
        "v86": {
          "name": "v86",
          "offset": 3890860,
          "size": 16384
        },
        "v126": {
          "name": "v126",
          "offset": 3890860,
          "size": 16384
        },
        "v175": {
          "name": "v175",
          "offset": 3907244,
          "size": 49152
        },
        "v3": {
          "name": "v3",
          "offset": 3923628,
          "size": 65536
        },
        "v97": {
          "name": "v97",
          "offset": 3923628,
          "size": 65536
        },
        "v163": {
          "name": "v163",
          "offset": 4005548,
          "size": 16384
        },
        "v215": {
          "name": "v215",
          "offset": 4005548,
          "size": 16384
        },
        "v162": {
          "name": "v162",
          "offset": 4005548,
          "size": 16384
        },
        "v204": {
          "name": "v204",
          "offset": 4005548,
          "size": 16384
        },
        "v29": {
          "name": "v29",
          "offset": 4005548,
          "size": 16384
        },
        "v88": {
          "name": "v88",
          "offset": 4005548,
          "size": 16384
        },
        "v24": {
          "name": "v24",
          "offset": 4005548,
          "size": 16384
        },
        "v187": {
          "name": "v187",
          "offset": 4005548,
          "size": 16384
        },
        "v87": {
          "name": "v87",
          "offset": 4005548,
          "size": 16384
        },
        "v136": {
          "name": "v136",
          "offset": 4005548,
          "size": 16384
        },
        "v168": {
          "name": "v168",
          "offset": 4005548,
          "size": 65536
        },
        "v57": {
          "name": "v57",
          "offset": 4021932,
          "size": 16384
        },
        "v30": {
          "name": "v30",
          "offset": 4021932,
          "size": 16384
        },
        "v59": {
          "name": "v59",
          "offset": 4021932,
          "size": 16384
        },
        "v25": {
          "name": "v25",
          "offset": 4021932,
          "size": 16384
        },
        "v116": {
          "name": "v116",
          "offset": 4021932,
          "size": 16384
        },
        "v46": {
          "name": "v46",
          "offset": 4021932,
          "size": 16384
        },
        "v48": {
          "name": "v48",
          "offset": 4021932,
          "size": 16384
        },
        "v18": {
          "name": "v18",
          "offset": 4021932,
          "size": 16384
        },
        "v82": {
          "name": "v82",
          "offset": 4021932,
          "size": 16384
        },
        "v68": {
          "name": "v68",
          "offset": 4021932,
          "size": 16384
        },
        "v33": {
          "name": "v33",
          "offset": 4021932,
          "size": 16384
        },
        "v123": {
          "name": "v123",
          "offset": 4021932,
          "size": 16384
        },
        "v91": {
          "name": "v91",
          "offset": 4021932,
          "size": 16384
        },
        "v62": {
          "name": "v62",
          "offset": 4021932,
          "size": 16384
        },
        "v28": {
          "name": "v28",
          "offset": 4021932,
          "size": 16384
        },
        "v170": {
          "name": "v170",
          "offset": 4021932,
          "size": 16384
        },
        "v49": {
          "name": "v49",
          "offset": 4021932,
          "size": 16384
        },
        "v218": {
          "name": "v218",
          "offset": 4120236,
          "size": 589824
        },
        "v197": {
          "name": "v197",
          "offset": 4120236,
          "size": 262144
        },
        "v156": {
          "name": "v156",
          "offset": 4120236,
          "size": 262144
        },
        "v203": {
          "name": "v203",
          "offset": 4906668,
          "size": 1048576
        },
        "v182": {
          "name": "v182",
          "offset": 4906668,
          "size": 1048576
        },
        "v50": {
          "name": "v50",
          "offset": 4906668,
          "size": 84934656
        },
        "v219": {
          "name": "v219",
          "offset": 6217388,
          "size": 262144
        },
        "v149": {
          "name": "v149",
          "offset": 6217388,
          "size": 1048576
        }
      }
    },
    "dynamic": {
      "size": 0,
      "allocations": {}
    }
  },
  "placeholders": {
    "__MAX_THREADS_PER_THREADGROUP__": null
  },
  "inputs": [
    "v79"
  ],
  "outputs": [
    "v202"
  ],
  "licenses": {
    "webdnn": "(C) Machine Intelligence Laboratory (The University of Tokyo), MIT License"
  }
}